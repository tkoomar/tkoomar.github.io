<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidytuesday | Tanner Koomar</title>
    <link>/categories/tidytuesday/</link>
      <atom:link href="/categories/tidytuesday/index.xml" rel="self" type="application/rss+xml" />
    <description>tidytuesday</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>&amp;copy 2020</copyright><lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>tidytuesday</title>
      <link>/categories/tidytuesday/</link>
    </image>
    
    <item>
      <title>Tidy Tuesday: University Research Funding</title>
      <link>/post/2019-05-08-tt-uni-funding/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-05-08-tt-uni-funding/</guid>
      <description>&lt;p&gt;Animated GIFs showing changes to funding of university research, broken down by speciality.&lt;/p&gt;
&lt;p&gt;If you take a look at this table raw, it really is quite the mess. It is kind of hard to imagine data that is &lt;em&gt;less&lt;/em&gt; tidy:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
library(gganimate)
library(showtext) ## for google fonts
font_add_google(&amp;quot;Dosis&amp;quot;)
font_add_google(&amp;quot;Comfortaa&amp;quot;)
showtext_auto()

download.file(&amp;quot;https://www.aaas.org/sites/default/files/2018-11/UniDisc1.xlsx&amp;quot;, 
              &amp;quot;2019-05-08_UniDisc1.xlsx&amp;quot;)
readxl::read_excel(&amp;quot;2019-05-08_UniDisc1.xlsx&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 103 x 13
##    `University R&amp;amp;D…  X__1  X__2  X__3  X__4  X__5  X__6  X__7  X__8  X__9
##    &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 (budget authori…   NA    NA    NA    NA    NA    NA    NA    NA    NA 
##  2 &amp;lt;NA&amp;gt;             2007  2008  2009  2010  2011  2012  2013  2014  2015 
##  3 Computer Scienc… 1696. 1709. 1837  1864. 1943. 1996. 2228. 2040. 2051.
##  4 &amp;lt;NA&amp;gt;               NA    NA    NA    NA    NA    NA    NA    NA    NA 
##  5 Environmental S…   NA    NA    NA    NA    NA    NA    NA    NA    NA 
##  6 Atmospheric Sci…  529.  491.  478.  488.  537.  522.  531.  531.  600.
##  7 Earth Sciences   1080. 1104. 1170. 1233. 1274. 1280. 1253. 1226. 1164.
##  8 Oceanography     1176. 1220. 1237. 1163. 1170. 1123  1132. 1133. 1098.
##  9 Other Environme…  393.  434.  470   520.  535.  550.  524.  524.  533.
## 10 Total Environme… 3178. 3250. 3356. 3404  3516. 3475. 3441. 3414. 3394.
## # ... with 93 more rows, and 3 more variables: X__10 &amp;lt;dbl&amp;gt;, X__11 &amp;lt;dbl&amp;gt;,
## #   X__12 &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have a couple header rows and then disciplines, followed by several sub-disciplines (or none). In Excel, this looks rather inteligible because of bold formating, etc. We have none of that here and have to get a litle creative to separate and assign disciplines to sub-disciplines.&lt;/p&gt;
&lt;p&gt;The main pattern we have here is that every discipline row is preceded by an NA value. Combining &lt;code&gt;dplyr::lag()&lt;/code&gt;, which gets the last value in a vector with &lt;code&gt;zoo::locf()&lt;/code&gt;, which replaces NA&amp;rsquo;s with the most recent non-missing value.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tot_dat &amp;lt;- readxl::read_excel(&amp;quot;2019-05-08_UniDisc1.xlsx&amp;quot;, 
                   skip = 2,  ## header junk
                   n_max = 47 ## 2nd table appears after here
                   ) %&amp;gt;%
  mutate(discipline = case_when( is.na(lag(X__1)) ~ X__1)) %&amp;gt;%  ## get the category columns
  select(X__1, discipline, everything()) %T&amp;gt;% ## these two lines are just for printing out the
  {print(head(.))} %&amp;gt;%                      ## intermediary results
  mutate(discipline = zoo::na.locf(discipline), 
         funding_source = &amp;quot;total&amp;quot;) %T&amp;gt;%
  {print(head(.))} %&amp;gt;% 
  filter(!is.na((X__1)), 
         !is.na(`2007`),
         !str_detect(X__1, &amp;quot;Total&amp;quot;)
         ) %&amp;gt;%
  rename(&#39;sub_discipline&#39; = &#39;X__1&#39;) %T&amp;gt;%
  {print(head(.))} %&amp;gt;%
  select(-`&#39;07 - &#39;17`) %&amp;gt;%
  gather(`2007`:`2017`, 
         key = year,
         value = budget) %T&amp;gt;%
  {print(head(.))} %&amp;gt;%
  mutate(budget = budget*1e6)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 14
##   X__1  discipline `2007` `2008` `2009` `2010` `2011` `2012` `2013` `2014`
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 Comp… Computer …  1696.  1709.  1837   1864.  1943.  1996.  2228.  2040.
## 2 &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;          NA     NA     NA     NA     NA     NA     NA     NA 
## 3 Envi… Environme…    NA     NA     NA     NA     NA     NA     NA     NA 
## 4 Atmo… &amp;lt;NA&amp;gt;         529.   491.   478.   488.   537.   522.   531.   531.
## 5 Eart… &amp;lt;NA&amp;gt;        1080.  1104.  1170.  1233.  1274.  1280.  1253.  1226.
## 6 Ocea… &amp;lt;NA&amp;gt;        1176.  1220.  1237.  1163.  1170.  1123   1132.  1133.
## # ... with 4 more variables: `2015` &amp;lt;dbl&amp;gt;, `2016` &amp;lt;dbl&amp;gt;, `2017` &amp;lt;dbl&amp;gt;,
## #   `&#39;07 - &#39;17` &amp;lt;dbl&amp;gt;
## # A tibble: 6 x 15
##   X__1  discipline `2007` `2008` `2009` `2010` `2011` `2012` `2013` `2014`
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 Comp… Computer …  1696.  1709.  1837   1864.  1943.  1996.  2228.  2040.
## 2 &amp;lt;NA&amp;gt;  Computer …    NA     NA     NA     NA     NA     NA     NA     NA 
## 3 Envi… Environme…    NA     NA     NA     NA     NA     NA     NA     NA 
## 4 Atmo… Environme…   529.   491.   478.   488.   537.   522.   531.   531.
## 5 Eart… Environme…  1080.  1104.  1170.  1233.  1274.  1280.  1253.  1226.
## 6 Ocea… Environme…  1176.  1220.  1237.  1163.  1170.  1123   1132.  1133.
## # ... with 5 more variables: `2015` &amp;lt;dbl&amp;gt;, `2016` &amp;lt;dbl&amp;gt;, `2017` &amp;lt;dbl&amp;gt;,
## #   `&#39;07 - &#39;17` &amp;lt;dbl&amp;gt;, funding_source &amp;lt;chr&amp;gt;
## # A tibble: 6 x 15
##   sub_discipline discipline `2007` `2008` `2009` `2010` `2011` `2012`
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 Computer Scie… Computer …  1696.  1709.  1837   1864.  1943.  1996.
## 2 Atmospheric S… Environme…   529.   491.   478.   488.   537.   522.
## 3 Earth Sciences Environme…  1080.  1104.  1170.  1233.  1274.  1280.
## 4 Oceanography   Environme…  1176.  1220.  1237.  1163.  1170.  1123 
## 5 Other Environ… Environme…   393.   434.   470    520.   535.   550.
## 6 Agricultural … Life Scie…  3453   3478.  3507.  3426   3476.  3614 
## # ... with 7 more variables: `2013` &amp;lt;dbl&amp;gt;, `2014` &amp;lt;dbl&amp;gt;, `2015` &amp;lt;dbl&amp;gt;,
## #   `2016` &amp;lt;dbl&amp;gt;, `2017` &amp;lt;dbl&amp;gt;, `&#39;07 - &#39;17` &amp;lt;dbl&amp;gt;, funding_source &amp;lt;chr&amp;gt;
## # A tibble: 6 x 5
##   sub_discipline            discipline          funding_source year  budget
##   &amp;lt;chr&amp;gt;                     &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 Computer Sciences         Computer Sciences   total          2007   1696.
## 2 Atmospheric Sciences      Environmental Scie… total          2007    529.
## 3 Earth Sciences            Environmental Scie… total          2007   1080.
## 4 Oceanography              Environmental Scie… total          2007   1176.
## 5 Other Environmental Scie… Environmental Scie… total          2007    393.
## 6 Agricultural Sciences     Life Sciences       total          2007   3453
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That looks much tidyr! Let&amp;rsquo;s do the same with the other table, a little bit more efficiently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;try(
readxl::read_excel(&amp;quot;2019-05-08_UniDisc1.xlsx&amp;quot;, 
                   skip = 53, 
                   n_max = 47 
                   ) %&amp;gt;%
  mutate(discipline = case_when( is.na(lag(X__1)) ~ X__1), 
         discipline = zoo::na.locf(discipline), 
         funding_source = &amp;quot;federal&amp;quot;
         ) %&amp;gt;%
  select(X__1, discipline, everything()) %&amp;gt;%
  filter(!is.na((X__1)), 
         !is.na(`2007`),
         !str_detect(X__1, &amp;quot;Total&amp;quot;)
         ) %&amp;gt;%
  rename(&#39;sub_discipline&#39; = &#39;X__1&#39;) %&amp;gt;%
  select(-`&#39;07 - &#39;17`) %&amp;gt;%
  gather(`2007`:`2017`, 
         key = year,
         value = budget)  %&amp;gt;% 
  mutate(budget = budget*1e6)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OH NO! There is an empty row after the header that wasn&amp;rsquo;t in the other table, and it is throwing us off. Let&amp;rsquo;s just remov that pesky row and pretend this never happened.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fed_dat &amp;lt;- readxl::read_excel(&amp;quot;2019-05-08_UniDisc1.xlsx&amp;quot;, 
                   skip = 53, 
                   n_max = 47 
                   ) %&amp;gt;%
  filter(!row_number() == 1) %&amp;gt;%
  mutate(discipline = case_when( is.na(lag(X__1)) ~ X__1), 
         discipline = zoo::na.locf(discipline), 
         funding_source = &amp;quot;federal&amp;quot;
         )  %&amp;gt;%
  select(X__1, discipline, everything()) %&amp;gt;%
  filter(!is.na((X__1)), 
         !is.na(`2007`),
         !str_detect(X__1, &amp;quot;Total&amp;quot;)
         ) %&amp;gt;%
  rename(&#39;sub_discipline&#39; = &#39;X__1&#39;) %&amp;gt;%
  select(-`&#39;07 - &#39;17`) %&amp;gt;%
  gather(`2007`:`2017`, 
         key = year,
         value = budget) %&amp;gt;% 
  mutate(budget = budget*1e6)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, lets combine this all into one big tibble&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat &amp;lt;- bind_rows(fed_dat, tot_dat) %&amp;gt;% 
    spread(funding_source, budget) %&amp;gt;%
  mutate(other = total-federal) %&amp;gt;%
  gather(funding_source, budget, federal, other) %&amp;gt;%
  mutate(year = as.numeric(year),
         budget = ifelse(funding_source==&#39;federal&#39;, budget, -budget)) %&amp;gt;%
    arrange(discipline) %&amp;gt;%
  mutate(
    sub_discipline = factor(sub_discipline, ordered = T, levels = unique(sub_discipline))
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;a-new-theme&#34;&gt;A new theme&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_fnd &amp;lt;- function(base_size = 11, 
         base_family = &amp;quot;Comfortaa&amp;quot;, 
         base_line_size = base_size/22, 
         base_rect_size = base_size/22) {
      theme_minimal(base_size = base_size, 
               base_family = base_family,
               base_line_size = base_line_size, 
               base_rect_size = base_rect_size) %+replace% 
    theme(plot.background = element_rect(fill = &#39;#e5d3ac&#39;), 
          panel.background = element_rect(fill = &#39;#efe5c8&#39;, color = NA),
          panel.grid = element_line(color = &#39;#640c14&#39;, 
                                    size = 0.15)) + 
    theme(plot.margin = margin(20,20,5,25),
          text = element_text(colour = &#39;#640c14&#39;),
          axis.text = element_text(colour = &#39;#640c14&#39;),
          axis.text.y = element_text(margin = margin(2,2,2,20)),
          axis.text.x.top = element_text(size = 11), 
          axis.ticks.x.top = element_blank(),
          plot.title = element_text(family = &amp;quot;Dosis&amp;quot;, size = 18, face = &#39;bold&#39;), 
          plot.subtitle = element_text(family = &amp;quot;Dosis&amp;quot;, 
                                       hjust = 1)
          )
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_1 &amp;lt;- dat %&amp;gt;%
 filter( discipline != &amp;quot;Life Sciences&amp;quot;) %&amp;gt;%
  ggplot(aes(y = sub_discipline, color = funding_source)) +
  geom_segment(aes(x = 0, xend = budget, yend = sub_discipline, color = funding_source), 
               size = 2.5) +
  geom_point(aes(x = budget, y = sub_discipline, fill = discipline),
             pch = 21, size = 8 , stroke = 0)  + 
  scale_fill_manual(values = c(&#39;Physical Sciences&#39;  = &#39;#fcaf43&#39;,
                               &#39;Computer Sciences&#39; = &#39;#e61e28&#39;, 
                               &#39;Environmental Sciences&#39; = &#39;#71a234&#39;, 
                               &#39;Social Sciences&#39; = &#39;#207e76&#39;, 
                              &#39;Psychology&#39; = &#39;#8dc642&#39;, 
                               &#39;Mathematical Sciences&#39; = &#39;#26bdb2&#39;, 
                               &#39;Engineering&#39; = &#39;#f26630&#39;,  
                               &#39;Other Sciences&#39; = &#39;#c21a24&#39;), 
                    guide = guide_legend(title.position = &#39;top&#39;, 
                                         title.hjust = 0.5, 
                                         ncol = 2 )) + 
  scale_color_manual(values = c(&#39;#5e2b15&#39;, &#39;#9d4823&#39;),
                     guide = &#39;none&#39;) + 
  scale_x_continuous(breaks = c(-1.5e9,0,2e9), 
                     minor_breaks = c(-.5e9,-1e9,.5e9,1e9,1.5e9),
                     limits = c(-1.5e9,2e9), 
                     labels = c(&amp;quot;$1.5 Mil&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;$2 Mil&amp;quot;), 
                     position  =&#39;bottom&#39;, 
                     sec.axis = sec_axis(~., 
                                         breaks = c(-0.75e9,1e9),  
                                         labels = c(&amp;quot;all other funding&amp;quot;, &amp;quot;federal funding&amp;quot;)
                                         )
                     ) + 
  labs(y = element_blank(),
       x = element_blank(),
       title = &amp;quot;funding for university research in {closest_state}&amp;quot;,
       subtitle = &amp;quot;(excluding life sciences)&amp;quot;, 
       caption = &amp;quot;A #TidyTuesday Adventure by @TannerKoomar\nsource: American Association for the Advancement of Science&amp;quot;) + 
  theme_fnd() + 
  theme(legend.position = &#39;bottom&#39;,
        legend.text = element_text(margin = margin(5,40,5,0)),
        panel.grid.major.y = element_blank()) +
  transition_states(
    year,
    transition_length = 2,
    state_length = 1
  ) 

anim_save(animation = plot_1, filename = &amp;quot;final_plot_1.gif&amp;quot;, width = 700, height = 700)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./featured.gif&#34; alt=&#34;The first final plot&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_2 &amp;lt;- dat %&amp;gt;%
  filter( discipline == &amp;quot;Life Sciences&amp;quot;) %&amp;gt;%
  ggplot(aes(y = sub_discipline, color = funding_source)) +
  geom_segment(aes(x = 0, xend = budget, yend = sub_discipline, color = funding_source), 
               size = 3) +
  geom_point(aes(x = budget, y = sub_discipline),
             pch = 21, size = 7 , stroke = 0, fill = &#39;#71a234&#39;)  + 
  scale_color_manual(values = c(&#39;#5e2b15&#39;, &#39;#9d4823&#39;),
                     guide = &#39;none&#39;) + 
  scale_x_continuous(breaks = c(-12e9,0,16e9), 
                     minor_breaks = c(-4e9,-8e9,4e9,8e9),
                     limits = c(-12e9,16e9), 
                     labels = c(&amp;quot;$12 Mil&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;$16 Mil&amp;quot;), 
                     position  =&#39;bottom&#39;, 
                     sec.axis = sec_axis(~., 
                                         breaks = c(-6e9,8e9),  
                                         labels = c(&amp;quot;all other funding&amp;quot;, &amp;quot;federal funding&amp;quot;)
                                         )
                     ) + 
  labs(y = element_blank(),
       x = element_blank(),
       title = &amp;quot;funding for university research in {closest_state}&amp;quot;,
       caption = &amp;quot;A #TidyTuesday Adventure by @TannerKoomar\nsource: American Association for the Advancement of Science&amp;quot;) + 
  theme_fnd() + 
  theme(legend.position = &#39;bottom&#39;,
        panel.grid.major.y = element_blank()) +
  transition_states(
    year,
    transition_length = 2,
    state_length = 1
  ) 

anim_save(animation = plot_2, filename = &amp;quot;final_plot_2.gif&amp;quot;, width = 700, height = 350)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./final_plot_2.gif&#34; alt=&#34;The second final plot&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: How The Housing Price Index Flipped</title>
      <link>/post/2019-04-21-tt-housing-prices/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-04-21-tt-housing-prices/</guid>
      <description>&lt;p&gt;A look at housing price trends over the last century with a compound infographic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#format-data&#34;&gt;format data&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#a-new-theme&#34;&gt;A new theme&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#violin-plot&#34;&gt;violin plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#statebin-maps&#34;&gt;statebin maps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#line-plots&#34;&gt;line plots&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#map-key&#34;&gt;map key&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#texts&#34;&gt;texts&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#title&#34;&gt;title&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#narrative&#34;&gt;narrative&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#footer&#34;&gt;footer&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#asemble&#34;&gt;Asemble&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#the-final-plot&#34;&gt;The final Plot&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
library(statebins)
library(cowplot)
library(magick)
library(showtext) ## for google fonts
font_add_google(&amp;quot;Staatliches&amp;quot;)
font_add_google(&amp;quot;Oswald&amp;quot;)
font_add_google(&amp;quot;Montserrat&amp;quot;, regular.wt = 300, bold.wt = 500)
showtext_auto()


## read in data
hpi_dat &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2019/2019-02-05/state_hpi.csvhttps://github.com/rfordatascience/tidytuesday/raw/master/data/2019/2019-02-05/state_hpi.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   year = col_integer(),
##   month = col_integer(),
##   state = col_character(),
##   price_index = col_double(),
##   us_avg = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;format-data&#34;&gt;format data&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;hpi_dat &amp;lt;- hpi_dat %&amp;gt;% 
  mutate(years =  cut(year, 
                       breaks = c(1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2018), 
                       labels = c(1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015), 
                       include.lowest = TRUE
                       )
         ) %&amp;gt;%
  group_by(years) %&amp;gt;%
  mutate(
    price_ratio = price_index/us_avg,
    price_sd = sd(price_index/us_avg)
    ) %&amp;gt;% 
  ungroup() %&amp;gt;%
  left_join(tibble(state = state.abb, region = as.character(state.division))) %&amp;gt;%
  mutate(region = replace_na(region, &amp;quot;Washington DC&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;state&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;a-new-theme&#34;&gt;A new theme&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theme_house&amp;lt;- function(base_size = 11, base_family = &amp;quot;Oswald&amp;quot;, base_line_size = base_size/22, base_rect_size = base_size/22) {
      theme_minimal(base_size = base_size, 
               base_family = base_family,
               base_line_size = base_line_size, 
               base_rect_size = base_rect_size) %+replace% 
    theme(axis.title = element_text(face = &#39;bold&#39;, hjust = 0, size = 14),
          strip.text = element_text(hjust = 1))
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;violin-plot&#34;&gt;violin plot&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;violin &amp;lt;- hpi_dat %&amp;gt;%
  ggplot(aes(x = years, y = (price_ratio), fill = price_sd)) + 
  geom_hline(yintercept = 1 , lty = 2) + 
  geom_violin(color = NA, alpha = 0.85) + 
  scale_fill_gradientn(colors = c(&amp;quot;#F98400&amp;quot;,&amp;quot;#ECCBAE&amp;quot;), name = &#39;standard deviation of home prices&#39;) + 
  labs(x = &amp;quot;5 year period&amp;quot;, 
       y = &amp;quot;HPI relative to national average&amp;quot;
       ) + 
  guides(fill = guide_colorbar(title.position = &amp;quot;top&amp;quot;, 
                               title.hjust = 0.5, 
                               label.position = &#39;bottom&#39;, 
                               barwidth = 15, 
                               barheight = .5)
         ) + 
  scale_y_continuous(trans = &#39;log2&#39;, breaks = c(1/2, 1, 2), labels = c(&amp;quot;1/2x&amp;quot;, &amp;quot;1x&amp;quot;, &amp;quot;2x&amp;quot;), limits = c(1/2,2)) + 
  #scale_fill_viridis_c(direction = -1, option = &amp;quot;E&amp;quot;) + 
  theme_house() + 
  theme(legend.direction = &#39;horizontal&#39;, 
        legend.justification = c(.5, 0),
        legend.position = c(0.5, 0.78)
        )

violin
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 rows containing non-finite values (stat_ydensity).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-3-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;statebin-maps&#34;&gt;statebin maps&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bin_maps &amp;lt;- hpi_dat %&amp;gt;%
  filter(years %in% c(1975, 1995, 2015)) %&amp;gt;%
  ggplot(aes(state = state, 
             fill = cut(log2(price_ratio), 
                        breaks = c(-Inf, -.625, -.375, -.125, .125, .375, .625, Inf), include.lowest = TRUE,
                        labels = c(&amp;quot;-1&amp;quot;, &amp;quot;-1/2&amp;quot;, &amp;quot;-1/4&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;1/4&amp;quot;, &amp;quot;1/2&amp;quot;, &amp;quot;1&amp;quot;)
                        )
             ) 
         ) + 
  geom_statebins(border_size = 0, dark_lbl = NA, light_lbl = NA) + 
  facet_wrap(~years, nrow = 3) + 
  coord_equal() + 
  guides(fill = guide_legend(title.position = &#39;top&#39;,
                             title.hjust = 0.5, 
                             label.position = &#39;bottom&#39;, 
                             direction = &#39;horizontal&#39;, 
                             nrow = 1, 
                             keyheight = .75, 
                             keywidth = c(2, 1, 1, 2, 1, 1, 2)
                             )
         ) + 
  scale_fill_manual(values = colorRampPalette(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#fbf4ee&amp;quot;, &amp;quot;#00A08A&amp;quot;))(7),  
                    name = &amp;quot;HPI relative to national average&amp;quot;, 
                    labels = c(&amp;quot;1/2x&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;1x&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot; 2x&amp;quot;)) + 
  ggtitle(&amp;quot;Home Prices in Flyover\nCountry Can&#39;t Keep Up&amp;quot;) + 
  theme_void() + 
  theme(plot.title=element_text(family = &amp;quot;Oswald&amp;quot;, 
                                size=20, 
                                hjust=1, 
                                lineheight = 0.85), 
        plot.margin = margin(0,10,0,10), 
        strip.text = element_text(family = &amp;quot;Oswald&amp;quot;, 
                                  size = 24,
                                  hjust = 0),
        legend.position = &#39;top&#39;, 
        legend.justification = 0.5,
        legend.direction = &#39;horizontal&#39;, 
        legend.text = element_text(family = &amp;quot;Oswald&amp;quot;)
       )

bin_maps
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-4-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;line-plots&#34;&gt;line plots&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;lines &amp;lt;- hpi_dat %&amp;gt;%
  group_by(year, region) %&amp;gt;%
  ggplot(aes(x = year, y = price_ratio, color = region, group = region)) + 
  geom_hline(yintercept = 1, lty = 2, lwd = 0.25) + 
  scale_y_continuous(trans = &#39;log2&#39;, breaks = c(1/2, 1, 2), labels = c(&amp;quot;1/2x&amp;quot;, &amp;quot;1x&amp;quot;, &amp;quot;2x&amp;quot;), limits = c(1/2,2)) + 
  labs(y = &amp;quot;HPI relative to national average&amp;quot;) + 
  geom_line(alpha = 0.85, size = 4, show.legend = FALSE) + 
  facet_wrap(~region, ncol = 2) + 
  scale_color_manual(values = c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00A08A&amp;quot;, &amp;quot;#F2AD00&amp;quot;, &amp;quot;#F98400&amp;quot;, &amp;quot;#5bd679&amp;quot;, &amp;quot;#ECCBAE&amp;quot;, &amp;quot;#046C9A&amp;quot;, &amp;quot;#000000&amp;quot;, &amp;quot;#ABDDDE&amp;quot;, &amp;quot;#D69C4E&amp;quot; )) +
  theme_house() + 
  theme(axis.title = element_text(size = 22))
lines
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 rows containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-5-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;map-key&#34;&gt;map key&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bin_map_key &amp;lt;- hpi_dat %&amp;gt;%
  left_join(tibble(state = state.abb, region = state.division)) %&amp;gt;%
  ggplot(aes(state = state, fill = region)) + 
  geom_statebins(border_size = 0, family = &amp;quot;Montserrat&amp;quot; ) + 
  scale_fill_manual(values = c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00A08A&amp;quot;, &amp;quot;#F2AD00&amp;quot;, &amp;quot;#F98400&amp;quot;, &amp;quot;#5bd679&amp;quot;, &amp;quot;#ECCBAE&amp;quot;, &amp;quot;#046C9A&amp;quot;, &amp;quot;#000000&amp;quot;, &amp;quot;#ABDDDE&amp;quot;, &amp;quot;#D69C4E&amp;quot;)) + 
  coord_equal() + 
  ggtitle(&amp;quot;Regions of the United States&amp;quot;) + 
  theme_void() + 
  theme(plot.title=element_text(family = &amp;quot;Oswald&amp;quot;, size=20, hjust=0), 
        plot.margin = margin(10,10,10,10), 
        legend.position = &#39;none&#39;
        ) 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = c(&amp;quot;state&amp;quot;, &amp;quot;region&amp;quot;)

## Warning: Column `region` joining character vector and factor, coercing into
## character vector
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bin_map_key
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-6-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;texts&#34;&gt;texts&lt;/h2&gt;
&lt;h4 id=&#34;title&#34;&gt;title&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;header &amp;lt;- ggplot() + 
 annotate(geom = &amp;quot;text&amp;quot;, 
          y = -0.1, 
          x = 0.5, 
          size = 10,
          family = &amp;quot;Staatliches&amp;quot;,
          color = &#39;white&#39;,
          alpha = 1,
          lineheight = 0.7,
          hjust = 1,
          label=&amp;quot;HOW THE HOUSING\nPRICE INDEX&amp;quot;
          ) + 
   annotate(geom = &amp;quot;text&amp;quot;, 
          y = -0.1, 
          x = .79, 
          size = 12,
          family = &amp;quot;Staatliches&amp;quot;, 
          color = &#39;white&#39;,
          alpha = 1,
          lineheight = 0.9,
          hjust = 0,
          label=&amp;quot;FLIPPED&amp;quot; 
          ) + 
  ylim(-2,2) + 
  xlim(-2,2) + 
  theme_void() + 
  theme(
    plot.background = element_rect(color = &amp;quot;white&amp;quot;,
                                   fill = &amp;quot;transparent&amp;quot;, 
                                   size = 5)
  )


ggdraw() + draw_image(&amp;quot;house.png&amp;quot;) + draw_plot(header)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-7-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;narrative&#34;&gt;narrative&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;narr &amp;lt;- ggplot() + 
 annotate(geom = &amp;quot;text&amp;quot;, 
          y = 0, 
          x= -2, 
          size = 5.5, 
          family = &amp;quot;Montserrat&amp;quot;, 
          color = &#39;black&#39;,
          alpha = 0.75, 
          lineheight = 0.9,
          hjust = 0,
          label=str_wrap(&amp;quot;In the 1970&#39;s, many individual states had average home prices (HPI) above the national average. The spread of house prices narrowed, until the mid 1990&#39;s. After this inflection point, house prices again grew more extreme. Less populous states drive this trend, with home prices in these regions going from above average to below it.&amp;quot;, 30)
          ) + 
  ylim(-2,2) + 
  xlim(-2,2) + 
  theme_void() + 
  theme(
    plot.background = element_rect(color = &amp;quot;white&amp;quot;,
                                   fill = &#39;#e5e5ff&#39;, 
                                   size = 5)
  )

narr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-8-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;footer&#34;&gt;footer&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;foot &amp;lt;- ggplot() + 
 annotate(geom = &amp;quot;text&amp;quot;, 
          y = 0, 
          x= 0, 
          size = 3, 
          family = &amp;quot;Montserrat&amp;quot;, 
          color = &#39;black&#39;,
          alpha = 0.5,
          hjust = 0.5,
          label= &amp;quot;◊ A #TidyTuesday adventure by @TannerKoomar ◊ Data from Freddie Mac ◊ Photo from pexels.com ◊&amp;quot;
          ) + 
  ylim(-2,2) + 
  xlim(-2,2) + 
  theme_void() + 
  theme(
    plot.background = element_rect(color = &amp;quot;white&amp;quot;,
                                   fill = &#39;#e5e5ff&#39;, 
                                   size = 3)
  )

foot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-02-05_files/figure-markdown_github/unnamed-chunk-9-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;asemble&#34;&gt;Asemble&lt;/h2&gt;
&lt;p&gt;let&amp;rsquo;s try cowplot this time&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;final_plot &amp;lt;- plot_grid(
  (ggdraw() + draw_image(&amp;quot;house.png&amp;quot;) + draw_plot(header)), 
  plot_grid(violin, 
            narr, 
            rel_widths = c(5,3)
            ),
  plot_grid(
            plot_grid(bin_maps + theme(plot.background = element_rect(fill = alpha(&#39;#e5e5ff&#39;, 0.25), 
                                                                      color = &#39;white&#39;, 
                                                                      size = 2)
                                       ),
                      bin_map_key, 
                      ncol = 1,
                      rel_heights = c(3,1)
                      ), 
            lines, 
            rel_widths = c(3, 5)
            ),
  foot,
  ncol = 1, 
  rel_heights = c(1, 2, 6, 0.15)
)

png(&amp;quot;final_plot.png&amp;quot;, width = 1000, height = 2000, res = 144, bg = &amp;quot;white&amp;quot;)
final_plot
dev.off()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## png 
##   2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-final-plot&#34;&gt;The final Plot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./featured.png&#34; alt=&#34;The final plot&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: Milk Production</title>
      <link>/post/2019-03-02-tt-milk-gif/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-03-02-tt-milk-gif/</guid>
      <description>&lt;p&gt;A simple animated gif map.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#make-a-map&#34;&gt;MAKE A MAP&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#animate-map&#34;&gt;Animate map&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#the-final-plot&#34;&gt;The final Plot&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ───────────────────

## ✔ ggplot2 3.1.0     ✔ purrr   0.2.5
## ✔ tibble  1.4.2     ✔ dplyr   0.7.7
## ✔ tidyr   0.8.2     ✔ stringr 1.3.1
## ✔ readr   1.1.1     ✔ forcats 0.3.0

## ── Conflicts ─── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(transformr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: transformr
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(urbnmapr)
library(gridExtra)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;gridExtra&#39;

## The following object is masked from &#39;package:dplyr&#39;:
## 
##     combine
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gganimate)
library(patchwork)

source(&#39;https://raw.githubusercontent.com/tkoomar/ggplot2_themes/master/theme_black.R&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: showtext

## Loading required package: sysfonts

## Loading required package: showtextdb
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;milk_state &amp;lt;- read_csv(&amp;quot;../data/2019/2019-01-29/state_milk_production.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   region = col_character(),
##   state = col_character(),
##   year = col_integer(),
##   milk_produced = col_double()
## )

## Warning in rbind(names(probs), probs_f): number of columns of result is not
## a multiple of vector length (arg 1)

## Warning: 50 parsing failures.
## row # A tibble: 5 x 5 col     row col   expected           actual file                                expected   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;              &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;                               actual 1  1501 year  no trailing chara… e3     &#39;../data/2019/2019-01-29/state_mil… file 2  1502 year  no trailing chara… e3     &#39;../data/2019/2019-01-29/state_mil… row 3  1503 year  no trailing chara… e3     &#39;../data/2019/2019-01-29/state_mil… col 4  1504 year  no trailing chara… e3     &#39;../data/2019/2019-01-29/state_mil… expected 5  1505 year  no trailing chara… e3     &#39;../data/2019/2019-01-29/state_mil…
## ... ................. ... ........................................................................... ........ ........................................................................... ...... ........................................................................... .... ........................................................................... ... ........................................................................... ... ........................................................................... ........ ...........................................................................
## See problems(...) for more details.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;milk_state &amp;lt;- milk_state %&amp;gt;% 
  rename(&#39;state_name&#39; = &#39;state&#39;) 
  

data(&#39;states&#39;)

milk_map &amp;lt;- left_join(milk_state, states)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;state_name&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;make-a-map&#34;&gt;MAKE A MAP&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;map_plot &amp;lt;- milk_map %&amp;gt;% 
  group_by(year) %&amp;gt;%
  mutate(milk_total = sum(milk_produced),
    milk_scaled = milk_produced/milk_total
    ) %&amp;gt;%
  ggplot(aes(x = long, y = lat, fill = milk_scaled, group = group)) + 
  geom_polygon(size = 0.25, color = &#39;black&#39;) + 
  coord_map(projection = &amp;quot;albers&amp;quot;, lat0 = 39, lat1 = 45) +
  scale_fill_viridis_c(option = &amp;quot;inferno&amp;quot;)+
  #scale_fill_distiller(palette = &#39;PuBuGn&#39;, direction = 1) + 
  theme_black() + 
  theme(legend.position = &#39;none&#39;, 
        axis.text = element_blank(), 
        axis.ticks = element_blank(), 
        axis.line = element_blank(), 
        axis.title = element_blank(), 
        panel.grid = element_blank()) + 
  ggtitle(&amp;quot;portion of milk production by year&amp;quot;, &amp;quot;{closest_state}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;animate-map&#34;&gt;Animate map&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;map_anim &amp;lt;- map_plot + transition_states(states = year, 
                                         transition_length = 5, 
                                         state_length = 5, 
                                         wrap = TRUE)

anim_save(animation = map_anim, 
          filename = &amp;quot;final_plot.gif&amp;quot;, 
          width = 640
          )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in lapply(row_vars$states, as.integer): NAs introduced by coercion

## Warning in f(..., self = self): NAs introduced by coercion
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-final-plot&#34;&gt;The final Plot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./featured.gif&#34; alt=&#34;The final plot&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: R Tweets</title>
      <link>/post/2019-02-13-tt-rstats-tweets/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-02-13-tt-rstats-tweets/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#make-some-new-columns&#34;&gt;make some new columns&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#set-lables-of-variables-of-interest&#34;&gt;Set lables of variables of interest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#main-plot&#34;&gt;Main plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#morning&#34;&gt;Morning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#afternoon&#34;&gt;afternoon&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#sidebar&#34;&gt;sidebar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#footer&#34;&gt;footer&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#the-final-plot&#34;&gt;The final Plot&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ────────────────────────────────── tidyverse 1.2.1 ──

## ✔ ggplot2 3.1.0     ✔ purrr   0.2.5
## ✔ tibble  1.4.2     ✔ dplyr   0.7.7
## ✔ tidyr   0.8.2     ✔ stringr 1.3.1
## ✔ readr   1.1.1     ✔ forcats 0.3.0

## ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lubridate)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;lubridate&#39;

## The following object is masked from &#39;package:base&#39;:
## 
##     date
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gridExtra)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;gridExtra&#39;

## The following object is masked from &#39;package:dplyr&#39;:
## 
##     combine
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;source(&amp;quot;https://raw.githubusercontent.com/tkoomar/ggplot2_themes/master/theme_cc.R&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: showtext

## Loading required package: sysfonts

## Loading required package: showtextdb
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytuesday_tweets &amp;lt;- readRDS(&amp;quot;../data/2019/2019-01-01/tidytuesday_tweets.rds&amp;quot;)
rstats_tweets &amp;lt;- readRDS(&amp;quot;../data/2019/2019-01-01/rstats_tweets.rds&amp;quot;)


## helper function for formatting correlation output
slope_conf &amp;lt;- function(x, y){
  res &amp;lt;- lm(y ~ x)
  conf &amp;lt;- confint(res, &amp;quot;x&amp;quot;, 0.95)
  paste0(&amp;quot;95% confidence interval: &amp;quot;, round(conf[1], 3), &amp;quot;-&amp;quot;, round(conf[2], 3))
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;make-some-new-columns&#34;&gt;make some new columns&lt;/h2&gt;
&lt;p&gt;We want to get the day of the week, and claculate the number of hastags per tweet.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rstats_tweets &amp;lt;-rstats_tweets %&amp;gt;% 
  mutate(w_day = wday(created_at, label = TRUE),
         hour = hour(created_at)) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(n_hash = length(hashtags))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;set-lables-of-variables-of-interest&#34;&gt;Set lables of variables of interest&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat &amp;lt;- rstats_tweets %&amp;gt;%
  mutate(&amp;quot;retweet per hastag enrichment&amp;quot; = log2(retweet_count/n_hash), 
         &amp;quot;number of hastags&amp;quot; = n_hash, 
         &amp;quot;number of retweets&amp;quot; = retweet_count ) %&amp;gt;%
  gather(key, value, &amp;quot;retweet per hastag enrichment&amp;quot;, &amp;quot;number of hastags&amp;quot;, &amp;quot;number of retweets&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;main-plot&#34;&gt;Main plot&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;morning_col &amp;lt;- alpha(&amp;quot;#ffd92f&amp;quot;, 0.35)
noon_col &amp;lt;- alpha(&amp;quot;#e5c494&amp;quot;, 0.4)

p_week &amp;lt;-  dat %&amp;gt;% ggplot(aes(x = hour, y = value, color = key)) + 
  annotate(&#39;rect&#39;, size = 0,
           xmin = 5, xmax = 9, 
           ymin = -1, ymax = 5, 
            fill = morning_col) + 
  annotate(&#39;rect&#39;, size = 0,
           xmin = 12, xmax = 20, 
           ymin = -1, ymax = 5, 
            fill = noon_col) + 
  stat_smooth(alpha = 0.1, size = 1.5) + 
  geom_hline(yintercept = 0, lty = 3) + 
  scale_color_brewer(palette = &amp;quot;Set2&amp;quot;) + 
  facet_wrap(~ w_day, nrow = 1) + 
  coord_cartesian(ylim = c(-1,5)) + 
  ylab(&amp;quot;&amp;quot;) + 
  theme_cc(base_size = 12) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, 
        plot.title = element_text(size = 26)) + 
  ggtitle(&amp;quot;#rstats aren&#39;t early morning grinders&amp;quot;, &amp;quot;the average number of retweets and hashtags per #rstats tweet, by day and time&amp;quot;)
p_week
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &amp;quot;cs&amp;quot;)&#39;

## Warning: Removed 243274 rows containing non-finite values (stat_smooth).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-4-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;morning&#34;&gt;Morning&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p_morning &amp;lt;- dat %&amp;gt;% 
  filter(hour &amp;gt;= 5 &amp;amp; hour &amp;lt;= 9 ) %&amp;gt;% 
  filter(retweet_count &amp;lt; 500) %&amp;gt;%    ## there are a couple big outliers here
  {
    ggplot(., aes(x = as.factor(n_hash), y = retweet_count)) + 
      #geom_jitter(color = alpha(noon_col, 0.05)) + 
      geom_boxplot(color = &amp;quot;#b3b3b3&amp;quot;, fill = morning_col, outlier.colour = alpha(&amp;quot;#b3b3b3&amp;quot;, 0.02)) + 
      stat_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;#e78ac3&amp;quot;, size = 2, 
                  aes(x = (n_hash), y = retweet_count)) + 
      coord_cartesian(xlim = c(0, 19.75 ), ylim = c(0, 19.75)) + 
      ggtitle(slope_conf(.$n_hash, .$retweet_count)) + 
      theme_cc(base_size = 12) + 
      xlab(&amp;quot;number of hashtags&amp;quot;) + 
      ylab(&amp;quot;number of retweets&amp;quot;)
  }
p_morning
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-5-1.png&#34; alt=&#34; &#34;&gt; ### sidebar&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;morning_sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
  annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Poppins&amp;quot;, 
            size = 5, 
            color = &amp;quot;grey50&amp;quot;,
           label = str_wrap(string = &amp;quot;In general, more hashtags = more retweets. Early morning tweets usually contain more hashtags than tweets later in the day. Fewer people are on twitter at this time, so the apparent effectiveness of hashtags at provoking retweets is reduced. This begs the question: Why do people use more hashtags in the morning?&amp;quot;, 
                            width = 18)
  ) +
  theme_void() + 
  theme(
    plot.background = element_rect(
      fill = morning_col,color = &amp;quot;white&amp;quot;, size = 2
      )
  )

morning_sidebar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-6-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;afternoon&#34;&gt;afternoon&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p_noon &amp;lt;- dat %&amp;gt;% 
  filter(hour &amp;gt;= 12 &amp;amp; hour &amp;lt;= 20 ) %&amp;gt;% 
  filter(retweet_count &amp;lt; 500) %&amp;gt;%    ## there are a couple big outliers here
  {
    ggplot(., aes(x = as.factor(n_hash), y = retweet_count)) + 
      #geom_jitter(color = alpha(noon_col, 0.05)) + 
      geom_boxplot(color = &amp;quot;#b3b3b3&amp;quot;, fill = noon_col, outlier.colour = alpha(&amp;quot;#b3b3b3&amp;quot;, 0.02)) + 
      stat_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;#e78ac3&amp;quot;, size = 2, 
                  aes(x = (n_hash), y = retweet_count)) + 
      coord_cartesian(xlim = c(0, 19.75 ), ylim = c(0, 19.75)) + 
      ggtitle(slope_conf(.$n_hash, .$retweet_count)) + 
      theme_cc(base_size = 12) + 
      xlab(&amp;quot;number of hashtags&amp;quot;) + 
      ylab(&amp;quot;number of retweets&amp;quot;)
  }

p_noon
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-7-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sidebar&#34;&gt;sidebar&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;noon_sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
  annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Poppins&amp;quot;, 
            size = 5,
            color = &amp;quot;grey50&amp;quot;,
           label = str_wrap(string = &amp;quot;Hashtags used in the mid-afternoon, when most people are on twitter, are almost twice as effective at provoking retweets! Also, while most days see a single pronounced increase in tweets, Sunday afternoon sees two distinct bumps in #rstats tweets.&amp;quot;, 
                            width = 18)
  ) +
  theme_void() + 
  theme(
    plot.background = element_rect(
      fill = noon_col, color = &amp;quot;white&amp;quot;, size = 2
      ), 
    plot.margin = unit(c(.01,.01,.01,.01), &#39;npc&#39;)
  )

noon_sidebar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-8-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;footer&#34;&gt;footer&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;footer &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
  annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Poppins&amp;quot;, 
            size = 2.5, 
            color = &amp;quot;grey50&amp;quot;,
           label = paste0(&amp;quot;A #TidyTuesday adventure\n&amp;quot;,
             &amp;quot;Data from rtweet.info\n&amp;quot;,
             &amp;quot;Analysis @Tanner Koomar\n&amp;quot;,
             &amp;quot;Design @Tanner Koomar\n&amp;quot;,
             &amp;quot;https://github.com/tkoomar/\ntidytuesday/blob/master/\nwork/2019-01-01.md&amp;quot;)
  ) +
  theme_void() + 
  theme(
    plot.background = element_rect(
      fill = alpha(&amp;quot;#b3b3b3&amp;quot;, 0.5), color = &amp;quot;white&amp;quot;, size = 2
      ), 
    plot.margin = unit(c(.01,.01,.01,.01), &#39;npc&#39;)
  )

footer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2019-01-01_files/figure-markdown_github/unnamed-chunk-9-1.png&#34; alt=&#34;&amp;rdquo; &amp;ldquo;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Assemble! #### legend&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_leg &amp;lt;-  cowplot::get_legend(p_week +
                        theme(legend.title = element_blank(), 
                              legend.justification = &#39;right&#39;))
plot_leg
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## TableGrob (5 x 5) &amp;quot;guide-box&amp;quot;: 2 grobs
##                                     z     cells                  name
## 99_e27293391d92b7a74a1c708851c8c43e 1 (3-3,3-3)                guides
##                                     0 (2-4,2-4) legend.box.background
##                                               grob
## 99_e27293391d92b7a74a1c708851c8c43e gtable[layout]
##                                     zeroGrob[NULL]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;png(&amp;quot;featured.png&amp;quot;, width = 1200, height = 900, res = 144, bg = &amp;quot;white&amp;quot;)

grid.arrange(
  p_week + theme(legend.position = &#39;none&#39;), 
  morning_sidebar, 
  p_morning + theme(axis.text.x = element_blank()), 
  p_noon + theme(axis.text.x = element_blank()), 
  noon_sidebar, 
  footer, 
  plot_leg,
  heights = c(.55,.15, .25,.25,.15),
  widths = c(.5, 1, 1, .5),
  layout_matrix = rbind(c(1,1,1,1),
                        c(2,7,7,5),
                        c(2,3,4,5),
                        c(2,3,4,5),
                        c(2,3,4,6)
    
  )
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &amp;quot;cs&amp;quot;)&#39;

## Warning: Removed 243274 rows containing non-finite values (stat_smooth).
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dev.off()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## png 
##   2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-final-plot&#34;&gt;The final Plot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./featured.png&#34; alt=&#34;The final plot&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: Infinitives in Medium Posts</title>
      <link>/post/2019-01-05-tt-medium/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-01-05-tt-medium/</guid>
      <description>&lt;p&gt;Some light web-scraping and natual language processing reveals how different parts of speech may hint at an author&amp;rsquo;s intent (and impact).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#tidy-the-text&#34;&gt;Tidy the text&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#infinitives&#34;&gt;infinitives&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#all-verbs&#34;&gt;all verbs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#some-plots&#34;&gt;some plots&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#scatter-plots&#34;&gt;scatter plots&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#tables&#34;&gt;tables&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#break-vs-build&#34;&gt;break vs build&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#topics-tags-plot&#34;&gt;topics / tags plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#time-to-harvest-some-posts&#34;&gt;time to (ha)rvest some posts!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#sentiment-plot&#34;&gt;sentiment plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#violin-plot&#34;&gt;violin plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#legend&#34;&gt;legend&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#text-boxes&#34;&gt;text boxes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#header&#34;&gt;header&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#definition-sidebar&#34;&gt;definition sidebar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#top-sidebar&#34;&gt;top sidebar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#bottom-sidebar&#34;&gt;bottom sidebar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#footer&#34;&gt;footer&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#stitch-it-together&#34;&gt;stitch it together&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#the-final-plot&#34;&gt;The final Plot&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tidy-the-text&#34;&gt;Tidy the text&lt;/h2&gt;
&lt;p&gt;following along with this: &lt;a href=&#34;https://cran.r-project.org/web/packages/tidytext/vignettes/tidytext.html&#34;&gt;https://cran.r-project.org/web/packages/tidytext/vignettes/tidytext.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;infinitives&#34;&gt;infinitives&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat_infin &amp;lt;- dat %&amp;gt;% unnest_tokens(infin, title, token = &amp;quot;ngrams&amp;quot;, n = 2) %&amp;gt;%
  filter(str_detect(pattern = &amp;quot;to &amp;quot;, string = infin)) %&amp;gt;%
  mutate(word = str_remove(infin, &amp;quot;to &amp;quot;)) %&amp;gt;% 
  left_join(parts_of_speech) %&amp;gt;%
  mutate(word_stem = wordStem(word, &amp;quot;english&amp;quot;)) %&amp;gt;%
  filter(str_detect(pos, regex(&amp;quot;Verb&amp;quot;, ignore_case = F)), 
         !duplicated(x1)) %&amp;gt;% 
  group_by(word_stem) %&amp;gt;%
  mutate(n = n()) %&amp;gt;%
  group_by(word_stem, n) %&amp;gt;%
  summarize(mean_claps = mean(claps),
            sum_claps = sum(claps), 
            infin = first(infin)
            )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;word&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;all-verbs&#34;&gt;all verbs&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat_verb &amp;lt;- dat %&amp;gt;% unnest_tokens(word, title) %&amp;gt;%
  left_join(parts_of_speech) %&amp;gt;%
  filter(str_detect(pos, regex(&amp;quot;Verb&amp;quot;, ignore_case = F)), 
         !duplicated(x1)) %&amp;gt;% 
  mutate(word_stem = wordStem(word, &amp;quot;english&amp;quot;)) %&amp;gt;%
  group_by(word_stem) %&amp;gt;%
  mutate(n = n()) %&amp;gt;%
  group_by(word_stem, n) %&amp;gt;%
  summarize(mean_claps = mean(claps),
            sum_claps = sum(claps),
            word = first(word)
            )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;word&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;some-plots&#34;&gt;some plots&lt;/h2&gt;
&lt;h4 id=&#34;scatter-plots&#34;&gt;scatter plots&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_point_infin &amp;lt;- dat_infin %&amp;gt;%
  filter(n &amp;gt; 5) %&amp;gt;%
  ggplot(aes(x = n, y = mean_claps, 
             color = case_when(
               mean_claps &amp;gt; 500 ~ &amp;quot;high impact infinitives&amp;quot;, 
               n &amp;gt; 100 ~ &amp;quot;overused infinitives&amp;quot;,
               TRUE ~ &amp;quot;low impact infinitives&amp;quot;
             ), 
             label = case_when(
               mean_claps &amp;gt; 500 | n &amp;gt; 100 ~ infin, 
               mean_claps &amp;gt; 200 &amp;amp; n &amp;gt; 50 ~ infin,
               TRUE ~ &amp;quot;&amp;quot;)
             )
         ) + 
  scale_colour_manual(values = c(colors_merb[3], colors_merb[1], colors_merb[2]), 
                     guide = guide_legend(title = NULL, override.aes = list(size = 4)) )+ 
  geom_point() + 
  geom_vline(xintercept = 100,
             lwd = 2, 
             lty = 2,
             alpha = 0.3,
             color = &amp;quot;grey90&amp;quot;) + 
  geom_hline(yintercept = 500, 
             lwd = 2,
             lty = 2, 
             alpha = 0.3,
             color = &amp;quot;grey90&amp;quot;) + 
  geom_text_repel(force = 15,
                  show.legend = FALSE) + 
  theme_merb() +
  xlab(&amp;quot;number of times used&amp;quot;) +
  ylab(&amp;quot;mean number of claps&amp;quot;) + 

  theme(
    legend.text = element_text(size = 12),
    legend.box.just = &amp;quot;right&amp;quot;
    )

plot_point_infin 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./2018-12-04_files/figure-markdown_github/unnamed-chunk-3-1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat_verb %&amp;gt;%
  filter(n &amp;gt; 5) %&amp;gt;%
  ggplot(aes(x = n, y = mean_claps, 
             color = case_when(
               mean_claps &amp;gt; 500 ~ &amp;quot;high_impact&amp;quot;, 
               n &amp;gt; 100 ~ &amp;quot;overused&amp;quot;,
               TRUE ~ &amp;quot;misc&amp;quot;
             ), 
             label = case_when(
    mean_claps &amp;gt; 500 | n &amp;gt; 100 ~ word, 
    mean_claps &amp;gt; 200 &amp;amp;  n &amp;gt; 50 ~ word, 
    TRUE ~ &amp;quot;&amp;quot;))) + 
  scale_colour_manual(values = c(colors_merb[3], colors_merb[1], colors_merb[2])) + 
  geom_point() + 
  geom_vline(xintercept = 100,
             lwd = 2, 
             lty = 2,
             alpha = 0.3,
             color = &amp;quot;grey90&amp;quot;) + 
  geom_hline(yintercept = 500, 
             lwd = 2,
             lty = 2, 
             alpha = 0.3,
             color = &amp;quot;grey90&amp;quot;) + 
  geom_text_repel(force = 15) + 
  theme_merb() +
  xlab(&amp;quot;number of times used&amp;quot;) +
  ylab(&amp;quot;mean number of claps&amp;quot;) + 
  theme(
    legend.position = &amp;quot;none&amp;quot;
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-4-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tables&#34;&gt;tables&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gtable_theme &amp;lt;- ttheme_minimal(
               core = list(fontfamily = &amp;quot;Share Tech Mono&amp;quot;,
                           bg_params = list(fill = c(&amp;quot;#414C3B&amp;quot;, &amp;quot;#191919&amp;quot;)),
                           fg_params = list(
                             col = matrix(c(&amp;quot;white&amp;quot;, colors_merb[2], colors_merb[3]), 
                                          nrow = 10,
                                          ncol = 3, 
                                          byrow = T),
                             fontsize = 12
                                            )
                           ),
               colhead = list(
                 bg_params = list(fill = &amp;quot;#222220&amp;quot;),
                 fg_params = list(col = &amp;quot;white&amp;quot;, 
                                  fontsize = 12)
               ),
               rowhead = list(),
               default = list(),
            padding =  unit(c(2, 3), &amp;quot;mm&amp;quot;) 
             )

infin_list &amp;lt;- dat_infin %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(n &amp;gt; 5) %&amp;gt;% 
  arrange(desc(mean_claps)) %&amp;gt;%
  select(infin, n, mean_claps) %&amp;gt;%
  mutate(mean_claps = round(mean_claps)) %&amp;gt;%
  rename(&amp;quot;infinitive&amp;quot; = &amp;quot;infin&amp;quot;, 
         &amp;quot;times used&amp;quot; = &amp;quot;n&amp;quot;, 
         &amp;quot;mean claps&amp;quot; = &amp;quot;mean_claps&amp;quot;) %&amp;gt;%
  head(10) %&amp;gt;%
  tableGrob(rows = NULL, 
             theme = gtable_theme
            )

verb_list &amp;lt;- dat_verb %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(n &amp;gt; 5) %&amp;gt;% 
  arrange(desc(mean_claps)) %&amp;gt;%
  select(word, n, mean_claps) %&amp;gt;%
  mutate(mean_claps = round(mean_claps)) %&amp;gt;%
  rename(&amp;quot;verb&amp;quot; = &amp;quot;word&amp;quot;, 
         &amp;quot;times used&amp;quot; = &amp;quot;n&amp;quot;, 
         &amp;quot;mean claps&amp;quot; = &amp;quot;mean_claps&amp;quot;) %&amp;gt;%
  head(10) %&amp;gt;%
  tableGrob(rows = NULL,
             theme = gtable_theme)

plot(infin_list)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-5-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(verb_list)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-5-2.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;break-vs-build&#34;&gt;break vs build&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dat_bb &amp;lt;- dat %&amp;gt;% unnest_tokens(infin, title, token = &amp;quot;ngrams&amp;quot;, n = 2, drop = FALSE) %&amp;gt;%
  filter(str_detect(pattern = &amp;quot;to &amp;quot;, string = infin)) %&amp;gt;%
  filter(infin %in% c(&amp;quot;to break&amp;quot;, &amp;quot;to disrupt&amp;quot;, &amp;quot;to destroy&amp;quot;, &amp;quot;to create&amp;quot;, &amp;quot;to make&amp;quot;, &amp;quot;to build&amp;quot;)) %&amp;gt;%
  mutate(
    type = case_when(
      infin %in% c(&amp;quot;to break&amp;quot;, &amp;quot;to disrupt&amp;quot;, &amp;quot;to destroy&amp;quot;) ~ &amp;quot;break&amp;quot;,
      TRUE ~ &amp;quot;build&amp;quot;
    )
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;topics--tags-plot&#34;&gt;topics / tags plot&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_topic &amp;lt;- dat_bb %&amp;gt;% 
  gather(tag, tag_true, contains(&amp;quot;tag_&amp;quot;)) %&amp;gt;%
  mutate(tag = str_remove(tag, &amp;quot;tag_&amp;quot;)) %&amp;gt;%
  group_by(type, tag) %&amp;gt;%
  summarize(
    tag_prop = mean(tag_true),
    tag_sd = sd(tag_true),
    tag_se = tag_sd/sqrt(n())
    ) %&amp;gt;%
  ggplot(aes(
    x = factor(tag) %&amp;gt;% reorder(tag_prop, FUN = mean), 
    y = tag_prop, 
    fill = type)
    ) + 
  geom_col(position=&amp;quot;dodge&amp;quot;, stat=&amp;quot;identity&amp;quot;) + 
  scale_fill_manual(values = c(pink, olive), 
                    labels = c(&amp;quot;posts about breaking\nor disrupting&amp;quot;, &amp;quot;posts about building\nor creating&amp;quot;),
                    guide = guide_legend(title = NULL)) + 
  geom_errorbar(aes(ymin = tag_prop - tag_se, ymax = tag_prop + tag_se),
                position = position_dodge(0.9), 
                size = 0.3, 
                width = 0.5,
                color = &amp;quot;white&amp;quot;
                ) + 
  xlab(&amp;quot;tag on post&amp;quot;)+ 
  ylab(&amp;quot;proportion with tag&amp;quot;) + 
  theme_merb() + 
  theme(
    axis.text.x = element_text(hjust = .75, angle = 10)
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown parameters: stat
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_topic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-7-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;time-to-harvest-some-posts&#34;&gt;time to (ha)rvest some posts!&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;read_post &amp;lt;- function(url){
  tryCatch(
  read_html(url, options = &amp;quot;NOERROR&amp;quot;) %&amp;gt;% 
  html_nodes(&amp;quot;.graf--p&amp;quot;) %&amp;gt;%
  html_text() %&amp;gt;%
  str_flatten(&amp;quot; &amp;quot;), 
  error = function(e){NA}, 
  warning  = function(w){NA}
  )
}

dat_bb &amp;lt;- dat_bb %&amp;gt;%
  mutate(
full_text = map(url, read_post)
)

dat_bb &amp;lt;- unnest(dat_bb)

## don&#39;t want to have to repeat that later, so save it now
save(dat_bb, file = &amp;quot;2018-12-04_scraped_posts.RData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;sentiment-plot&#34;&gt;sentiment plot&lt;/h4&gt;
&lt;p&gt;Not sure if stemming is needed here, given the way the sentiment dictionaries are constructed . . .&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sent &amp;lt;- get_sentiments(&amp;quot;loughran&amp;quot;) 

dat_sent &amp;lt;- dat_bb %&amp;gt;%  
  filter(!is.na(full_text)) %&amp;gt;%
  unnest_tokens(word, full_text) %&amp;gt;%
  left_join(sent)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;word&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_sent &amp;lt;- dat_sent %&amp;gt;%
  group_by(x1, sentiment, type) %&amp;gt;%
  tally() %&amp;gt;%
  group_by(x1) %&amp;gt;% 
  mutate(
    proportion = n / sum(n)
  ) %&amp;gt;%
  filter(!is.na(sentiment)) %&amp;gt;%
  group_by(type, sentiment) %&amp;gt;%
  summarise(
    median_prop = median(proportion),
    sd = sd(proportion), 
    se = (1.2533 * sd) / sqrt(n())) %&amp;gt;%
  ggplot(aes(x = factor(sentiment) %&amp;gt;% reorder(median_prop), 
             y = median_prop, 
             fill = type)) + 
    geom_col(position = &amp;quot;dodge&amp;quot;) + 
    scale_fill_manual(values = c(pink, olive)) + 
    geom_errorbar(aes(ymin = median_prop - se, ymax = median_prop + se),
                position = position_dodge(0.9), 
                size = 0.3, 
                width = 0.5,
                color = &amp;quot;white&amp;quot;
                ) + 
  xlab(&amp;quot;sentiment&amp;quot;)+ 
  ylab(&amp;quot;proportion of words in with sentiment&amp;quot;) + 
  theme_merb() + 
  theme(axis.text.x = element_text(angle = 15, hjust = .75))

plot_sent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-10-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;violin-plot&#34;&gt;violin plot&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_violin &amp;lt;- dat_bb %&amp;gt;% 
  ggplot(aes(x = type, y= reading_time, fill = type, color = type)) + 
  geom_violin(alpha = 0.85) + 
  coord_cartesian(ylim = c(0,10)) +
  #geom_jitter(alpha = 0.3) + ## too busy
  stat_summary(fun.y = mean, 
               fun.ymin = function(x){ quantile(x, probs = 0.25) }, 
               fun.ymax = function(x){ quantile(x, probs = 0.75) }, 
               size = 0.75, color = &amp;quot;black&amp;quot;
                 ) +
  xlab(&amp;quot;post theme&amp;quot;) + 
  ylab(&amp;quot;time to read post&amp;quot;) + 
  scale_fill_manual(values = c(pink, olive)) + 
  scale_color_manual(values = c(pink, olive)) + 
  theme_merb()  + 
  theme(#legend.position = &amp;quot;none&amp;quot;, 
        axis.text = element_text(size = 15), 
        axis.title = element_text(size = 20))

plot_violin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-11-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;legend&#34;&gt;legend&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_leg &amp;lt;- grid.arrange(cowplot::get_legend(plot_topic), 
             cowplot::get_legend(plot_point_infin), 
             widths = c(15, 85),
             layout_matrix = rbind(c(3, 2),
                                   c(3, 1))
             )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-12-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;text-boxes&#34;&gt;text boxes&lt;/h2&gt;
&lt;h4 id=&#34;header&#34;&gt;header&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;header &amp;lt;- ggplot() + 
 annotate(geom = &amp;quot;text&amp;quot;, 
          y = 3.25, 
          x = 1, 
          size = 10, 
          hjust = .8,
          family = &amp;quot;Roboto&amp;quot;, 
          color = colors_merb_seq[2],
          label = &amp;quot;what the use of&amp;quot; 
          ) + 
 annotate(geom = &amp;quot;text&amp;quot;, 
          y = 2, 
          x= 1, 
          size = 30, 
          family = &amp;quot;Share Tech Mono&amp;quot;, 
          color = pink,
          alpha = 0.05,
          hjust = 0.5,
          label=&amp;quot;infinitives&amp;quot;
          ) + 
   annotate(geom = &amp;quot;text&amp;quot;, 
          y = 2, 
          x= 1, 
          size = 15, 
          family = &amp;quot;Share Tech Mono&amp;quot;, 
          color = colors_merb_seq[5],
          hjust = 0.5,
          label=&amp;quot;infinitives&amp;quot;
          ) + 
annotate(geom = &amp;quot;text&amp;quot;, 
         y = 1, 
         x = 1, 
         size = 10,
         family = &amp;quot;Roboto&amp;quot;, 
         color = colors_merb_seq[2], 
         hjust = .2,
         label = &amp;quot;says about a Medium post&amp;quot;
         ) + 
  ylim(0,4) + 
  theme_void() + 
  theme(
    plot.background = element_rect(color = &amp;quot;#191919&amp;quot;,
                                   fill = olive, 
                                   size = 5)
  )

header
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-13-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;definition-sidebar&#34;&gt;definition sidebar&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;def_sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) + 
       annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 1.5, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 20,
            alpha = 0.1,
            color = &amp;quot;#D9B0AC&amp;quot;,
           label = &amp;quot;infinitive&amp;quot;) +
         annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = -1, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 20,
            alpha = 0.1,
            color = &amp;quot;#D9B0AC&amp;quot;,
           label = &amp;quot;Medium&amp;quot;) +
   annotate(&amp;quot;text&amp;quot;, 
            x = -1.5, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 4.8, 
            color = &amp;quot;white&amp;quot;,
           label = paste0(
              str_wrap(&amp;quot;infinitive: a verb form found in many languages that functions as a noun or is used with auxiliary verbs, and that names the action or state without specifying the subject: “to come”, “to be”, “to want”&amp;quot;, 29), 
             &amp;quot;\n&amp;quot;, &amp;quot;\n&amp;quot;, &amp;quot;\n&amp;quot;,
            str_wrap(&amp;quot;Medium: an online publishing platform developed as a long-form alternative to twitter.&amp;quot;, 29))
           ) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#222220&amp;quot; , color = &amp;quot;#191919&amp;quot;, size = 2)
  )

def_sidebar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-14-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;top-sidebar&#34;&gt;top sidebar&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;top_sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
  annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 5, 
            color = &amp;quot;white&amp;quot;,
           label = paste0(
              str_wrap(&amp;quot;Infinitives are used to express wants and desires. When an author uses an infinitive in the title of an article, they are making a promise to the reader about what the reader will learn: &#39;to build&#39;, &#39;to solve&#39;, &#39;to disrupt&#39;. The figure to the left shows the relationship between how often an infinitive is used in the titles of Medium posts (on the topics of data science) and the number of claps (likes) the post received.&amp;quot;, 32),
              &amp;quot;\n&amp;quot;,&amp;quot;\n&amp;quot;,
              str_wrap(&amp;quot;Compared to verbs alone, infinitives say a lot more about the content of an article, which you can see in the lists below. They show the &#39;most-clapped&#39; verbs or infinitives that are found in at least 5 article titles:&amp;quot;, 32)
           )
  )+
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#20261d&amp;quot; , color = &amp;quot;#191919&amp;quot;, size = 2)
  )
top_sidebar 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-15-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;bottom-sidebar&#34;&gt;bottom sidebar&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bot_sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
    annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 2, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Share Tech Mono&amp;quot;, 
            size = 6, 
            color = &amp;quot;#D9B0AC&amp;quot;,
           label = &amp;quot;build vs break&amp;quot;
  ) +
  annotate(&amp;quot;text&amp;quot;, 
            x = -2, 
            y = 1.5, 
            hjust = 0, 
            vjust = 1, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 5, 
            color = &amp;quot;white&amp;quot;,
           label = paste0(
             str_wrap(&amp;quot;Infinitives like &#39;build&#39; and &#39;create&#39; are overused in Medium post titles, and have little impact, while &#39;disrupt&#39; and &#39;break&#39; see far more claps on average. Comparing these types of posts one can see that &#39;breaking&#39; posts are usually shorter (a), have more emotional content (b), and are less likely to have highly specific tags (c)&amp;quot;, 32)
           )
  ) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#222220&amp;quot; , color = &amp;quot;#191919&amp;quot;, size = 2)
  )
bot_sidebar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-16-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;footer&#34;&gt;footer&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;footer &amp;lt;-  ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) +    
  annotate(&amp;quot;text&amp;quot;, 
            x = 0, 
            y = 0, 
            hjust = .5, 
            vjust = .5, 
            lineheight = 0.75, 
            family = &amp;quot;Roboto&amp;quot;, 
            size = 4, 
            color = &amp;quot;#191919&amp;quot;,
           label = paste0(
             &amp;quot;A #TidyTuesday adventure + Data from Kaggle.com + Design and and analysis by @TannerKoomar&amp;quot;, 
             &amp;quot;\n&amp;quot;,  
             &amp;quot;Code at https://github.com/tkoomar/tidytuesday/blob/master/work/2018-12-04.md&amp;quot;
             )
             ) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = olive , color = &amp;quot;#191919&amp;quot;, size = 2)
  )

  
footer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2018-12-04_files/figure-markdown_github/unnamed-chunk-17-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;stitch-it-together&#34;&gt;stitch it together&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;png(&amp;quot;2018-12-04_final_plot.png&amp;quot;, width = 1200, height = 1600, res = 144, bg = &amp;quot;#191919&amp;quot;)

grid.arrange(header, 
             def_sidebar,
             plot_point_infin + theme(legend.position = &#39;none&#39;),
             top_sidebar,
             plot_leg,
             infin_list,
             verb_list,
             plot_violin + theme(legend.position = &#39;none&#39;) + labs(tag = &amp;quot;(a)&amp;quot;),
             plot_sent + theme(legend.position = &#39;none&#39;) + labs(tag = &amp;quot;(b)&amp;quot;),
             plot_topic + theme(legend.position = &#39;none&#39;)+ labs(tag = &amp;quot;(c)&amp;quot;),
             bot_sidebar,
             footer,
             heights = c(15, 30, 20, 30, 30, 5),
             layout_matrix = rbind(c(1,1,1,1),
                                   c(2,3,3,4),
                                   c(5,3,3,4),
                                   c(11,9,9,6),
                                   c(8,10,10,7),
                                   c(12,12,12,12))
               )

dev.off()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## png 
##   2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-final-plot&#34;&gt;The final Plot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./featured.png&#34; alt=&#34;The final plot&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: Malaria</title>
      <link>/post/2018-12-12-tt-malaria/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      <guid>/post/2018-12-12-tt-malaria/</guid>
      <description>&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────────────────── tidyverse 1.3.0 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 3.2.1     ✔ purrr   0.3.3
## ✔ tibble  2.1.3     ✔ dplyr   0.8.3
## ✔ tidyr   1.0.0     ✔ stringr 1.4.0
## ✔ readr   1.3.1     ✔ forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geojsonio)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;geojsonio&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     pretty&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(showtext) ## for google fonts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: sysfonts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: showtextdb&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_death &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2018/2018-11-13/malaria_deaths.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   Entity = col_character(),
##   Code = col_character(),
##   Year = col_double(),
##   `Deaths - Malaria - Sex: Both - Age: Age-standardized (Rate) (per 100,000 people)` = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_age &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2018/2018-11-13/malaria_deaths_age.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Missing column names filled in: &amp;#39;X1&amp;#39; [1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   X1 = col_double(),
##   entity = col_character(),
##   code = col_character(),
##   year = col_double(),
##   age_group = col_character(),
##   deaths = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_inc &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2018/2018-11-13/malaria_inc.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   Entity = col_character(),
##   Code = col_character(),
##   Year = col_double(),
##   `Incidence of malaria (per 1,000 population at risk) (per 1,000 population at risk)` = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s look at the change over time (increase or in)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_death &amp;lt;- dat_death %&amp;gt;% 
  filter(Year &amp;gt;= 1995,
         Year &amp;lt;= 2015) %&amp;gt;%
  mutate(lustrum = cut_number(Year, 4)) %&amp;gt;% 
  group_by(Code, lustrum) %&amp;gt;% 
  summarize(
    &amp;quot;malaria death rate&amp;quot; = cor(`Deaths - Malaria - Sex: Both - Age: Age-standardized (Rate) (per 100,000 people)`, Year, method = &amp;quot;p&amp;quot; )
            )
dat_inc &amp;lt;- dat_inc %&amp;gt;% 
  filter(`Incidence of malaria (per 1,000 population at risk) (per 1,000 population at risk)` != 0) %&amp;gt;%
  group_by(Code) %&amp;gt;% 
  rename(
    &amp;quot;malaria incidence rate&amp;quot; = `Incidence of malaria (per 1,000 population at risk) (per 1,000 population at risk)`
            )
dat_age &amp;lt;- dat_age %&amp;gt;% 
  filter(year &amp;gt;= 1995,
         year &amp;lt;= 2015,
         deaths != 0) %&amp;gt;%
  mutate(lustrum = cut_number(year, 4)) %&amp;gt;% 
  group_by(code, lustrum, age_group) %&amp;gt;% 
  rename(Code = &amp;quot;code&amp;quot;, Year = &amp;quot;year&amp;quot;) %&amp;gt;%
  summarize(
    &amp;quot;deaths per age&amp;quot; = cor(deaths, Year, method = &amp;quot;p&amp;quot; )
            )&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;get-map-of-world&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;get map of world&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world &amp;lt;- geojson_read(&amp;#39;https://github.com/simonepri/geo-maps/releases/download/v0.6.0/countries-land-10km.geo.json&amp;#39;, what = &amp;quot;sp&amp;quot;)
w &amp;lt;- sf::st_as_sf(world) %&amp;gt;% rename(&amp;quot;Code&amp;quot; = &amp;quot;A3&amp;quot;)
dat_w &amp;lt;- w %&amp;gt;% 
  left_join(dat_death) %&amp;gt;% 
  left_join(dat_age) %&amp;gt;% 
  left_join(dat_inc)
dat_w &amp;lt;- dat_w %&amp;gt;% mutate(
  lustrum = case_when(
    lustrum == &amp;quot;[1995,2000]&amp;quot; ~ &amp;quot;1995 - 2000&amp;quot;,
    lustrum == &amp;quot;(2000,2005]&amp;quot; ~ &amp;quot;2000 - 2005&amp;quot;,
    lustrum == &amp;quot;(2005,2010]&amp;quot; ~ &amp;quot;2005 - 2010&amp;quot;,
    lustrum == &amp;quot;(2010,2015]&amp;quot; ~ &amp;quot;2010 - 2015&amp;quot;
  )
) %&amp;gt;% filter(!is.na(lustrum))
font_add_google(&amp;quot;Josefin Sans&amp;quot;)
showtext_auto(144)
malaria_plot &amp;lt;- dat_w %&amp;gt;% ggplot(
  aes(
    fill = cut_width(`malaria death rate`, center = 0, width = 0.5)
    )
  ) +
  geom_sf(aes(color = is.na(`malaria death rate`)))+ 
  coord_sf(ndiscr = 0) +
  theme_void() + 
  scale_color_manual(values = c(&amp;quot;TRUE&amp;quot; = &amp;quot;#d9e8f5&amp;quot;, &amp;quot;FALSE&amp;quot; = NA), 
                     guide = &amp;#39;none&amp;#39;) + 
  scale_fill_brewer(palette = &amp;quot;RdYlGn&amp;quot;, 
                    direction = -1, 
                    labels = c(&amp;quot;decrease&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;increase&amp;quot;, &amp;quot;&amp;quot;),
                    guide = guide_legend(
                      label.position = &amp;quot;left&amp;quot;, 
                      override.aes = list(color = NA)) 
                    ) + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#c9dff2&amp;quot;),
    legend.title = element_blank(),
    legend.text = element_text(),
    legend.key = element_blank(),
    text = element_text(family = &amp;quot;Josefin Sans&amp;quot;, size = 18)
  ) + 
  ggtitle(&amp;quot;annual change in malaria mortality rates from 1995 to 2015&amp;quot;, &amp;quot;A #TidyTuesday adventure by @TannerKoomar&amp;quot;) + 
  facet_wrap(. ~ lustrum, ncol = 2)
malaria_plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-12-12-tt-malaria/index_files/figure-html/final-plot-1.png&#34; width=&#34;1440&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: Thanksgiving Gravy</title>
      <link>/post/2018-11-20-tt-gravy/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/post/2018-11-20-tt-gravy/</guid>
      <description>&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2018/2018-11-20/thanksgiving_meals.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   .default = col_character(),
##   id = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## See spec(...) for full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Boy is this data messy! Lets relabel and organize it a bit.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat &amp;lt;- dat %&amp;gt;% 
  filter(is.na(dat) %&amp;gt;% rowSums() &amp;lt; 50) %&amp;gt;% 
  select(-id, -pie13, -dessert11, -side15, -contains(&amp;quot;Other&amp;quot;)) %&amp;gt;% 
  mutate(
    &amp;quot;number of\nkinds of pie&amp;quot; = select(., contains(&amp;quot;pie&amp;quot;)) %&amp;gt;% {!is.na(.)} %&amp;gt;% rowSums(),
    &amp;quot;total number\nof sides&amp;quot; = select(., contains(&amp;quot;side&amp;quot;)) %&amp;gt;% {!is.na(.)} %&amp;gt;% rowSums(), 
    &amp;quot;number of\n non-pie desserts&amp;quot; = select(., contains(&amp;quot;dessert&amp;quot;)) %&amp;gt;% {!is.na(.)} %&amp;gt;% rowSums()
    ) %&amp;gt;% mutate(
      family_income = factor(family_income,
                             levels = c(&amp;quot;$0 to $9,999&amp;quot; , &amp;quot;$10,000 to $24,999&amp;quot;, &amp;quot;$25,000 to $49,999&amp;quot;, &amp;quot;$50,000 to $74,999&amp;quot;, &amp;quot;$75,000 to $99,999&amp;quot;, &amp;quot;$100,000 to $124,999&amp;quot;, &amp;quot;$150,000 to $174,999&amp;quot;, &amp;quot;$175,000 to $199,999&amp;quot;, &amp;quot;$200,000 and up&amp;quot;, &amp;quot;Prefer not to answer&amp;quot;, &amp;quot;NA&amp;quot;),
                             ordered = T)
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;odds-ratio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Odds Ratio&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_or &amp;lt;- dat %&amp;gt;% 
  transmute(
    urban = community_type == &amp;quot;Urban&amp;quot;,
    not_urban = community_type != &amp;quot;Urban&amp;quot;,
    parade = !is.na(watch_program), 
    under30 = dat$age == &amp;quot;18 - 29&amp;quot;,
    over60 = dat$age == &amp;quot;60+&amp;quot;,
    female = dat$gender == &amp;quot;Female&amp;quot;,
    pray = dat$prayer == &amp;quot;Yes&amp;quot;
    ) %&amp;gt;%
  #select(prayer, female, friendsgiving, urban, not_urban, parade, under30, over60) %&amp;gt;%
map(function(x){
    out &amp;lt;- table(gravy = dat$gravy, foo = x) %&amp;gt;%  fisher.test(conf.level = 0.6827) 
    out &amp;lt;- c(out$estimate, lower = out$conf.int[1], upper = out$conf.int[2])
    return(out)
  }) %&amp;gt;%
  as.data.frame() %&amp;gt;%
  rownames_to_column() %&amp;gt;%
  gather(key, value, -rowname) %&amp;gt;%
  spread(rowname, value) %&amp;gt;%
  ggplot(aes(y = key, x = `odds ratio`))+ 
  geom_errorbarh(aes(xmin = lower, xmax = upper), size = .45, color = &amp;quot;#899DA4&amp;quot;, height = 0.75) + 
  geom_point(size = 4, color = &amp;quot;#DC863B&amp;quot;) + 
  geom_vline(xintercept = 1, lty = 2, lwd = 1, color = &amp;quot;#C93312&amp;quot;) + 
  scale_x_continuous(
    sec.axis = sec_axis(~ ., breaks = c(0.65, 1.8), labels = c(&amp;quot;less likely\nto have gravy&amp;quot;, &amp;quot;more likely\nto have gravy&amp;quot;))
    ) + 
  scale_y_discrete(labels = c(&amp;quot;pray&amp;quot; = &amp;quot;pray at dinner&amp;quot;,
                              &amp;quot;urban&amp;quot; = &amp;quot;city dwellers&amp;quot;,
                              &amp;quot;not_urban&amp;quot; = &amp;quot;suburban or\ncountry dwellers&amp;quot;,
                              &amp;quot;female&amp;quot; = &amp;quot;women&amp;quot;,
                              &amp;quot;under30&amp;quot; = &amp;quot;people under 30&amp;quot;,
                              &amp;quot;over60&amp;quot; = &amp;quot;people over 60&amp;quot;,
                              &amp;quot;parade&amp;quot; = &amp;quot;watch the\nMacy&amp;#39;s parade&amp;quot;)
  ) + 
  ylab(&amp;quot;&amp;quot;) + 
  xlab(&amp;quot;odds ratio&amp;quot;) + 
  theme_minimal() + 
  theme(
    text = element_text(family = &amp;quot;Poppins&amp;quot;),
    axis.text.x.top = element_text(size = 15, lineheight = 0.75), 
    axis.text.y = element_text(size = 10, lineheight = 0.7), 
    axis.ticks.x.top = element_blank(),
    plot.background = element_rect(color = NA, fill = &amp;quot;#fcf7e8&amp;quot;),
    panel.background = element_rect(color = NA, &amp;quot;#faefd1&amp;quot;), 
    panel.grid = element_line(color = &amp;quot;#fcf7e8&amp;quot;),
    panel.grid.minor = element_blank()
  )
plot_or&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;violin-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Violin Plots&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_totals &amp;lt;- dat %&amp;gt;% 
  filter(!is.na(gravy)) %&amp;gt;% 
  select(contains(&amp;quot;number&amp;quot;), gravy) %&amp;gt;%
  gather(key, value, -gravy) %&amp;gt;%
  mutate(gravy = case_when(
    gravy == &amp;quot;Yes&amp;quot; ~ &amp;quot;gravy&amp;quot;,
    gravy == &amp;quot;No&amp;quot; ~ &amp;quot;no gravy&amp;quot;
  )) %&amp;gt;%
  ggplot(aes(x = gravy, y = value, fill = gravy)) + 
  scale_fill_manual(values = c(&amp;quot;gravy&amp;quot; = &amp;quot;#DC863B&amp;quot;, &amp;quot;no gravy&amp;quot; = &amp;quot;#F8AFA8&amp;quot;)) + 
  geom_violin(alpha = 0.75, color = NA) +
  stat_summary(fun.y = mean, 
               fun.ymin = function(x){ quantile(x, probs = 0.25) }, 
               fun.ymax = function(x){ quantile(x, probs = 0.75) }, 
               color = &amp;quot;#74A089&amp;quot;, 
               size = 0.5
                 ) + 
  facet_wrap(~ key) + 
  theme_minimal() + 
  theme(legend.position = &amp;#39;none&amp;#39;,
    text = element_text(family = &amp;quot;Poppins&amp;quot;),
    strip.text = element_text(size = 12, lineheight = 0.75),
    axis.text.x.top = element_text(size = 15), 
    axis.text.x = element_text(size = 12), 
    axis.title.x = element_blank(),
    axis.ticks.x.top = element_blank(),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    plot.background = element_rect(color = NA, fill = &amp;quot;#fcf7e8&amp;quot;),
    panel.background = element_rect(color = NA, &amp;quot;#faefd1&amp;quot;), 
    panel.grid = element_line(color = &amp;quot;#fcf7e8&amp;quot;),
    panel.grid.minor = element_blank()
    )
plot_totals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;line-chart-of-income&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Line Chart of Income&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_income &amp;lt;- dat %&amp;gt;% 
  filter(family_income != &amp;quot;NA&amp;quot; &amp;amp; family_income != &amp;quot;Prefer not to answer&amp;quot;) %&amp;gt;%
  group_by(family_income) %&amp;gt;%
  summarize(
    gravy = mean(gravy == &amp;quot;Yes&amp;quot;, na.rm = T),
    gravy_sd = sqrt(gravy*(1-gravy)/n())
    ) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(y = gravy, x = family_income, group = 1, color = family_income)) + 
  geom_line(size = 3) + 
  geom_point(size = 6) + 
  geom_errorbar(aes(ymin = gravy - gravy_sd, ymax = gravy + gravy_sd), size = .25, width = .15) + 
  scale_color_manual(values = wesanderson::wes_palette(&amp;quot;Royal2&amp;quot;, n = 9, type = &amp;quot;c&amp;quot;) ) + 
  scale_x_discrete(breaks = c(&amp;quot;$0 to $9,999&amp;quot; ,&amp;quot;$75,000 to $99,999&amp;quot;,   &amp;quot;$200,000 and up&amp;quot;), labels = c(&amp;quot;$0 to\n$9,999&amp;quot; ,&amp;quot;$75,000 to\n$99,999&amp;quot;,   &amp;quot;$200,000\n and up&amp;quot;)) + 
  ggtitle(&amp;quot;annual family income&amp;quot;) + 
  ylab(&amp;quot;probability of having gravy&amp;quot;) + 
  theme_minimal() + 
  theme(
    legend.position = &amp;#39;none&amp;#39;,
    text = element_text(family = &amp;quot;Poppins&amp;quot;),
    axis.text.x = element_text(size = 12), 
    axis.title.x = element_blank(),
    axis.ticks.x.top = element_blank(),
    axis.text.y = element_text(size = 12),
    axis.title.y = element_text(size = 15),
    plot.background = element_rect(color = NA, fill = &amp;quot;#fcf7e8&amp;quot;),
    panel.background = element_rect(color = NA, fill = &amp;quot;#faefd1&amp;quot;), 
    panel.grid = element_line(color = &amp;quot;#fcf7e8&amp;quot;),
    panel.grid.minor = element_blank(),
    plot.title = element_text(size = 15, hjust = 0.5)
  ) 
plot_income&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;text-boxes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Text Boxes&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;header &amp;lt;- ggplot() + 
     annotate(geom = &amp;quot;text&amp;quot;, y = 3.15, x = 2, size = 50, family = &amp;quot;Pacifico&amp;quot;, color = &amp;quot;#fcf7e8&amp;quot;,
          label=&amp;quot;gravy&amp;quot;) + 
 annotate(geom = &amp;quot;text&amp;quot;, y = 3.25, x = 2, size = 5, family = &amp;quot;Poppins&amp;quot;, color = &amp;quot;#74A089&amp;quot;,
          label = &amp;quot;what your thanksgiving&amp;quot; ) + 
 annotate(geom = &amp;quot;text&amp;quot;, y = 2.5, x= 2, size = 25, family = &amp;quot;Pacifico&amp;quot;, color = &amp;quot;#DC863B&amp;quot;,
          label=&amp;quot;gravy&amp;quot;) + 
annotate(geom = &amp;quot;text&amp;quot;, y = .35, x = 2, size = 5,family = &amp;quot;Poppins&amp;quot;, color = &amp;quot;#74A089&amp;quot;, hjust = .6,
         label = &amp;quot;says about you&amp;quot;) + 
  ylim(0,4) + 
  theme_void() + 
  theme(
    plot.background = element_rect(color = &amp;quot;#fcf7e8&amp;quot;, fill = &amp;quot;#faefd1&amp;quot;, size = 5)
  )
header&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;midbar1 &amp;lt;- ggplot() + 
  ylim(-2,2) + 
  xlim(-2,2) + 
 annotate(&amp;quot;text&amp;quot;, x = -2, y = -2, hjust = 0, vjust = 0, lineheight = 0.75, family = &amp;quot;Poppins&amp;quot;, size = 4, color = &amp;quot;#899DA4&amp;quot;,
           label = str_wrap(&amp;quot;A dinner accompanied by congealed broth is a symbol of status and abundance. Below, the presence of gravy at a Thanksgiving meal goes hand-in-hand with a greater variety of both side dishes and pies.&amp;quot;, 70)
) + 
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#fcf7e8&amp;quot;, color = NA)
  )
midbar2 &amp;lt;- ggplot() + 
  ylim(-2,2) + 
  xlim(-2,2) + 
   annotate(&amp;quot;text&amp;quot;, x = -2, y = -2, hjust = 0, vjust = 0, lineheight = 0.75, family = &amp;quot;Poppins&amp;quot;, size = 4, color = &amp;quot;#899DA4&amp;quot;,
           label = str_wrap(&amp;quot;Eating concentrated meat juice is also a luxurious marker of wealth. The probability that a family will have gravy at a Thanksgiving meal increases markedly with annual income.&amp;quot;, 70)) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#fcf7e8&amp;quot;, color = NA)
  )
  
  midbar1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  midbar2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sidebar &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) + 
   annotate(&amp;quot;text&amp;quot;, x = -2, y = 2, hjust = 0, vjust = 1, lineheight = 1.05, family = &amp;quot;Poppins&amp;quot;, size = 4.4, color = &amp;quot;#899DA4&amp;quot;,
           label = str_wrap(&amp;quot;Gravy is truly the bellwether of the thanksgiving table. If you abstain from gravy, you are much more likely to live in a city, identify as a woman, and be younger than 30. Gravy-eaters, on the other hand, are much more likely to have an AARP membership, watch the Thanksgiving day parade, pray before dinner, and live outside or an urban center.&amp;quot;, 29)) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#faefd1&amp;quot;, color = NA)
  )
sidebar&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;footnote &amp;lt;- ggplot()  +
  ylim(-2,2) + 
  xlim(-2,2) + 
     annotate(&amp;quot;text&amp;quot;, x = 2, y = -2, hjust = 1, vjust = 0, lineheight = 0.75, family = &amp;quot;Poppins&amp;quot;, size = 2.75, color = &amp;quot;#899DA4&amp;quot;,
           label = paste(&amp;quot;a #TidyTuesday adventure\ndesign by @TannerKoomar\ndata from FiveThirtyEight\ncolor scheme from karthik/wesanderson&amp;quot;)) +
  theme_void() + 
  theme(
    plot.background = element_rect(fill = &amp;quot;#fcf7e8&amp;quot;, color = NA)
  )
footnote&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plots-assemble&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plots Assemble!&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_plot &amp;lt;- grid.arrange(header, 
               midbar1, 
               midbar2, 
               ggplotGrob(plot_totals), 
               ggplotGrob(plot_income), 
               ggplotGrob(plot_or), 
               sidebar, 
               footnote,
               heights = c(.15, .075, .35, .025, .325, .075),
               layout_matrix = rbind(c(1,1,1,1),
                                     c(2,2,3,3),
                                     c(4,4,5,5),
                                     c(NA,NA,NA,NA),
                                     c(6,6,6,7),
                                     c(6,6,6,8))
               )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/final-plot-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Get rid of that ugly white bar in the middle. . .
cowplot::ggdraw(final_plot) + 
    theme(plot.background = element_rect(fill = &amp;quot;#fcf7e8&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-20-tt-gravy/index_files/figure-html/final-plot-2.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidy Tuesday: USA Wind Power</title>
      <link>/post/2018-11-06-tt-wind-power/</link>
      <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/post/2018-11-06-tt-wind-power/</guid>
      <description>&lt;div id=&#34;load-data&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Load Data&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat &amp;lt;- read_csv(&amp;quot;https://github.com/rfordatascience/tidytuesday/raw/master/data/2018/2018-11-06/us_wind.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   .default = col_double(),
##   faa_ors = col_character(),
##   faa_asn = col_character(),
##   t_state = col_character(),
##   t_county = col_character(),
##   t_fips = col_character(),
##   p_name = col_character(),
##   t_manu = col_character(),
##   t_model = col_character(),
##   t_img_date = col_character(),
##   t_img_srce = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## See spec(...) for full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## get all the missing data to NA
dat &amp;lt;- dat %&amp;gt;% mutate_all(.funs = funs(replace(., . %in% c(-9999, &amp;quot;missing&amp;quot;), NA)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: funs() is soft deprecated as of dplyr 0.8.0
## Please use a list of either functions or lambdas: 
## 
##   # Simple named list: 
##   list(mean = mean, median = median)
## 
##   # Auto named with `tibble::lst()`: 
##   tibble::lst(mean, median)
## 
##   # Using lambdas
##   list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## drop rows and columns with high missing
dat.comp &amp;lt;- dat %&amp;gt;% select_if( function(x){sum(is.na(x))/length(x) &amp;lt; .15}) %&amp;gt;%
  filter(rowMeans(is.na(.)) &amp;lt; 0.15)

## get info at project level
dat.p.num &amp;lt;- dat.comp %&amp;gt;% group_by(p_name) %&amp;gt;% 
  select_if(is.numeric) %&amp;gt;% select(-case_id) %&amp;gt;%
  summarise_all(.funs = function(x){mean(x, na.rm = T)}) %&amp;gt;% 
  ungroup %&amp;gt;% select(-p_name) %&amp;gt;% filter(rowSums(is.na(.)) == 0) %&amp;gt;%
  filter(xlong &amp;lt; 100 &amp;amp; xlong &amp;gt; -125 &amp;amp; ylat &amp;gt; 20) %&amp;gt;% ## remove some geographic outliers
  filter(t_cap &amp;gt; 0 &amp;amp; t_cap &amp;lt; 6000) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reduce-dimensionality&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reduce Dimensionality&lt;/h2&gt;
&lt;div id=&#34;do-a-pca&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Do a PCA&lt;/h3&gt;
&lt;p&gt;Looks like PC1 makes up the bul of the difference, and it is due to turbine rotor sweep area&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat.pca &amp;lt;- prcomp(dat.p.num, center = TRUE, scale. = TRUE)

summary(dat.pca)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Importance of components:
##                           PC1    PC2     PC3     PC4     PC5     PC6    PC7
## Standard deviation     2.3420 1.3762 1.00832 0.98379 0.94979 0.86079 0.7040
## Proportion of Variance 0.4571 0.1578 0.08473 0.08065 0.07517 0.06175 0.0413
## Cumulative Proportion  0.4571 0.6149 0.69963 0.78028 0.85546 0.91720 0.9585
##                            PC8     PC9    PC10    PC11    PC12
## Standard deviation     0.53133 0.35791 0.27616 0.10600 0.01020
## Proportion of Variance 0.02353 0.01067 0.00636 0.00094 0.00001
## Cumulative Proportion  0.98202 0.99270 0.99905 0.99999 1.00000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat.pca$rotation %&amp;gt;% as.data.frame() %&amp;gt;% rownames_to_column() %&amp;gt;%
  ggplot(aes(y = PC1, x = rowname)) + 
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-plots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Some plots&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat.p.num %&amp;gt;% 
  bind_cols(as.tibble(dat.pca$x)) %&amp;gt;%
  ggplot(aes(x = xlong, ylat, color = PC1, size = p_cap, alpha = t_cap)) +
  scale_color_viridis_c() + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as.tibble()` is deprecated, use `as_tibble()` (but mind the new semantics).
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cluster&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Cluster&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Use the PCs that explain 95% of the variance
dat.k &amp;lt;- dat.pca$x %&amp;gt;% as.tibble %&amp;gt;%
  select(1:7) %&amp;gt;%
  mutate(
    k2 = kmeans(., 2)$cluster, 
    k3 = kmeans(., 3)$cluster,
    k4 = kmeans(., 4)$cluster,
    k5 = kmeans(., 5)$cluster,
    k6 = kmeans(., 6)$cluster
  ) %&amp;gt;% bind_cols(dat.p.num)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cluster-plots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Cluster Plots&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat.k %&amp;gt;% 
  ggplot(aes(x = xlong, ylat, color = as.character(k6), size = p_cap, alpha = t_cap)) +
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;) + 
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat.k %&amp;gt;% 
  ggplot(aes(x = xlong, ylat, color = as.character(k6), size = p_cap, alpha = t_cap)) +
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;)+ 
  geom_point() + 
  facet_wrap(~ as.character(k6), nrow = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;make-a-pretty-map-under-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Make a pretty map under the data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggmap)
invert &amp;lt;- function(M) {
  i &amp;lt;- function(x){rgb(t(255-col2rgb(x))/255)}
  
  m &amp;lt;- M %&amp;gt;% apply(2, i) %&amp;gt;% as.raster()
  
  class(m) &amp;lt;- class(M)
  attr(m, &amp;quot;bb&amp;quot;) &amp;lt;- attr(M, &amp;quot;bb&amp;quot;)
  return(m)
  }

us &amp;lt;- c(left = -125, bottom = 25.75, right = -67, top = 49)
m &amp;lt;- get_stamenmap(us, zoom = 5, maptype = &amp;quot;toner-lite&amp;quot;) 
ggmap(invert(m))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plots&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot.points &amp;lt;- ggmap(invert(m), extent = &amp;#39;device&amp;#39;) + 
  geom_point(aes(x = xlong, y = ylat, color = as.character(k6), size = p_cap, alpha = t_cap), data = dat.k, pch = 18) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) + 
  facet_wrap(~k6, ncol = 1) + 
  theme_void() + 
  theme(legend.position = &amp;#39;none&amp;#39;, strip.text = element_blank()) + 
  theme(plot.background = element_rect(fill = &amp;quot;black&amp;quot;, color = &amp;quot;black&amp;quot;), 
        panel.background = element_rect(fill = NULL))

plot.density &amp;lt;- ggmap(invert(m), extent = &amp;#39;device&amp;#39;) + 
  stat_density2d(aes(x = xlong, y = ylat, alpha = ..level.., fill = as.character(k6), color = NULL), data = dat.k, geom = &amp;quot;polygon&amp;quot;) + 
  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) + 
  facet_wrap(~k6, ncol = 1) + 
  theme_void() + 
  theme(legend.position = &amp;#39;none&amp;#39;, strip.text = element_blank()) + 
  theme(plot.background = element_rect(fill = &amp;quot;black&amp;quot;, color = &amp;quot;black&amp;quot;), 
        panel.background = element_rect(fill = NULL))

plot.all &amp;lt;- ggmap(invert(m), extent = &amp;#39;device&amp;#39;) + 
  geom_point(aes(x = xlong, y = ylat, color = as.character(k6), size = p_cap, alpha = t_cap), data = dat.k, pch = 18) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) + 
  guides(
    size = guide_legend(title = &amp;quot;project capacity&amp;quot;,title.position = &amp;#39;top&amp;#39;, override.aes = list(color = &amp;quot;white&amp;quot;)),
    alpha = guide_legend(title = &amp;quot;turbine capacity&amp;quot;,title.position = &amp;#39;top&amp;#39;, override.aes = list(color = &amp;quot;white&amp;quot;, size  = 4)), 
    color = guide_legend(title = &amp;#39;cluster&amp;#39;, title.position = &amp;#39;top&amp;#39;, override.aes = list(size = 4))
  ) + 
  ggtitle(&amp;quot;US Wind Turbine Projects&amp;quot;, &amp;quot;  a #tidytuesday adventure&amp;quot;) +
  theme_void() + 
  theme(title = element_text(color = &amp;#39;white&amp;#39;),
        legend.position = &amp;#39;bottom&amp;#39;, 
        legend.background = element_blank(),
        legend.text = element_text(color = &amp;quot;white&amp;quot;),
        legend.title = element_text(color = &amp;quot;white&amp;quot;),
        legend.key = element_blank(),
        axis.text = element_blank(),
        axis.title = element_blank(),
        plot.background = element_rect(fill = &amp;quot;black&amp;quot;, color = &amp;quot;black&amp;quot;), 
        panel.background = element_rect(fill = NULL))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;squish-together&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Squish together&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(cowplot)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## ********************************************************&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Note: As of version 1.0.0, cowplot does not change the&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   default ggplot2 theme anymore. To recover the previous&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   behavior, execute:
##   theme_set(theme_cowplot())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ********************************************************&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;cowplot&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:ggmap&amp;#39;:
## 
##     theme_nothing&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final.plot &amp;lt;- plot_grid(plotlist = list(plot.points, plot.all, plot.density), nrow = 1, rel_widths = c(.25,1,.25))
ggdraw(final.plot) + 
  theme(plot.background = element_rect(fill = &amp;quot;black&amp;quot;, color = 
&amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/2018-11-06-tt-wind-power/index_files/figure-html/final-plot-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
