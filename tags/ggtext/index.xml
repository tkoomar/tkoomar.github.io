<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggtext | Tanner Koomar</title>
    <link>https://tkoomar.github.io/tags/ggtext/</link>
      <atom:link href="https://tkoomar.github.io/tags/ggtext/index.xml" rel="self" type="application/rss+xml" />
    <description>ggtext</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>2020</copyright><lastBuildDate>Tue, 04 Feb 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:square]</url>
      <title>ggtext</title>
      <link>https://tkoomar.github.io/tags/ggtext/</link>
    </image>
    
    <item>
      <title>Tidy Tuesday: NFL Stadium Attendance</title>
      <link>https://tkoomar.github.io/post/2020-02-04-tt-football/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://tkoomar.github.io/post/2020-02-04-tt-football/</guid>
      <description>&lt;p&gt;Dip into the new &lt;code&gt;ggttext&lt;/code&gt; package to get some rich text formatting in a plot&amp;rsquo;s title. Also: sports.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#load-in-data&#34;&gt;Load in data&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#the-question-to-super-bowl-winners-have-harder-schedules&#34;&gt;The question: to super bowl winners have harder schedules?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#summarize-data&#34;&gt;Summarize data&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#test-the-difference-in-schedule-strength&#34;&gt;Test the difference in schedule strength&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#plot&#34;&gt;Plot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#bonus-color-by-team-name&#34;&gt;Bonus: Color by Team Name&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;#bonus-what-is-the-bump-in-attendance-the-year-after-winning-a-superbowl&#34;&gt;Bonus: What is the bump in attendance the year after winning a superbowl?&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;load-in-data&#34;&gt;Load in data&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;attendance &amp;lt;- read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/attendance.csv&#39;, 
                       col_types = cols())

glimpse(attendance)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 10,846
## Variables: 8
## $ team              &amp;lt;chr&amp;gt; &amp;quot;Arizona&amp;quot;, &amp;quot;Arizona&amp;quot;, &amp;quot;Arizona&amp;quot;, &amp;quot;Arizona&amp;quot;, &amp;quot;Arizon…
## $ team_name         &amp;lt;chr&amp;gt; &amp;quot;Cardinals&amp;quot;, &amp;quot;Cardinals&amp;quot;, &amp;quot;Cardinals&amp;quot;, &amp;quot;Cardinals&amp;quot;,…
## $ year              &amp;lt;dbl&amp;gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 200…
## $ total             &amp;lt;dbl&amp;gt; 893926, 893926, 893926, 893926, 893926, 893926, 893…
## $ home              &amp;lt;dbl&amp;gt; 387475, 387475, 387475, 387475, 387475, 387475, 387…
## $ away              &amp;lt;dbl&amp;gt; 506451, 506451, 506451, 506451, 506451, 506451, 506…
## $ week              &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …
## $ weekly_attendance &amp;lt;dbl&amp;gt; 77434, 66009, NA, 71801, 66985, 44296, 38293, 62981…
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standings &amp;lt;- read_csv(&#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/standings.csv&#39;, 
                      col_types = cols())
glimpse(standings)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 638
## Variables: 15
## $ team                 &amp;lt;chr&amp;gt; &amp;quot;Miami&amp;quot;, &amp;quot;Indianapolis&amp;quot;, &amp;quot;New York&amp;quot;, &amp;quot;Buffalo&amp;quot;, …
## $ team_name            &amp;lt;chr&amp;gt; &amp;quot;Dolphins&amp;quot;, &amp;quot;Colts&amp;quot;, &amp;quot;Jets&amp;quot;, &amp;quot;Bills&amp;quot;, &amp;quot;Patriots&amp;quot;…
## $ year                 &amp;lt;dbl&amp;gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, …
## $ wins                 &amp;lt;dbl&amp;gt; 11, 10, 9, 8, 5, 13, 12, 9, 7, 4, 3, 12, 11, 7, …
## $ loss                 &amp;lt;dbl&amp;gt; 5, 6, 7, 8, 11, 3, 4, 7, 9, 12, 13, 4, 5, 9, 10,…
## $ points_for           &amp;lt;dbl&amp;gt; 323, 429, 321, 315, 276, 346, 333, 321, 367, 185…
## $ points_against       &amp;lt;dbl&amp;gt; 226, 326, 321, 350, 338, 191, 165, 255, 327, 359…
## $ points_differential  &amp;lt;dbl&amp;gt; 97, 103, 0, -35, -62, 155, 168, 66, 40, -174, -2…
## $ margin_of_victory    &amp;lt;dbl&amp;gt; 6.1, 6.4, 0.0, -2.2, -3.9, 9.7, 10.5, 4.1, 2.5, …
## $ strength_of_schedule &amp;lt;dbl&amp;gt; 1.0, 1.5, 3.5, 2.2, 1.4, -1.3, -2.5, -0.2, -1.4,…
## $ simple_rating        &amp;lt;dbl&amp;gt; 7.1, 7.9, 3.5, 0.0, -2.5, 8.3, 8.0, 3.9, 1.1, -1…
## $ offensive_ranking    &amp;lt;dbl&amp;gt; 0.0, 7.1, 1.4, 0.5, -2.7, 1.5, 0.0, 0.6, 3.2, -8…
## $ defensive_ranking    &amp;lt;dbl&amp;gt; 7.1, 0.8, 2.2, -0.5, 0.2, 6.8, 8.0, 3.3, -2.1, -…
## $ playoffs             &amp;lt;chr&amp;gt; &amp;quot;Playoffs&amp;quot;, &amp;quot;Playoffs&amp;quot;, &amp;quot;No Playoffs&amp;quot;, &amp;quot;No Playo…
## $ sb_winner            &amp;lt;chr&amp;gt; &amp;quot;No Superbowl&amp;quot;, &amp;quot;No Superbowl&amp;quot;, &amp;quot;No Superbowl&amp;quot;, …
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;the-question-to-super-bowl-winners-have-harder-schedules&#34;&gt;The question: to super bowl winners have harder schedules?&lt;/h2&gt;
&lt;p&gt;I am curious if teams that win the super bowl have an easier or harder schedule than the other teams that make it to the playoffs. The &lt;code&gt;strength_of_schedule&lt;/code&gt; variable provides a simple way to test this.&lt;/p&gt;
&lt;p&gt;The only data manipulation we need to do is combine &lt;code&gt;playoffs&lt;/code&gt; and &lt;code&gt;sb_winner&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standings &amp;lt;- standings %&amp;gt;%
  mutate(final_position = if_else(sb_winner == &amp;quot;Won Superbowl&amp;quot;, sb_winner, playoffs))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;summarize-data&#34;&gt;Summarize data&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standing_summary &amp;lt;- standings %&amp;gt;%
  group_by(final_position) %&amp;gt;%
  summarize(less_zero = sum(strength_of_schedule &amp;lt; 0), 
            total = n(), 
            percent_less_zero = less_zero / total, 
            median_strength = median(strength_of_schedule)
            )

standing_summary
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   final_position less_zero total percent_less_zero median_strength
##   &amp;lt;chr&amp;gt;              &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;             &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;
## 1 No Playoffs          170   398             0.427             0.2
## 2 Playoffs             132   220             0.6              -0.5
## 3 Won Superbowl          8    20             0.4               0.2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It looks like most teams that make it to the playoffs have an easier schedule (60% of them hace an average opponent rating less than zero) than those that win the super bowl (only 40% have average opponent rating less than zero). Teams that don&amp;rsquo;t make the playoffs also seem to have more difficult schedule.&lt;/p&gt;
&lt;h2 id=&#34;test-the-difference-in-schedule-strength&#34;&gt;Test the difference in schedule strength&lt;/h2&gt;
&lt;p&gt;The Kruskal-Wallis is suitable for multiple rank-based comparisons of groups:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standings %&amp;gt;%
  kruskal.test(strength_of_schedule ~ final_position, data = .)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Kruskal-Wallis rank sum test
## 
## data:  strength_of_schedule by final_position
## Kruskal-Wallis chi-squared = 27.31, df = 2, p-value = 1.174e-06
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But sometimes, doing pairwise Wilcox tests can be more interpretable.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standings %&amp;gt;%
 filter(final_position != &amp;quot;Won Superbowl&amp;quot;) %&amp;gt;%
  wilcox.test(strength_of_schedule ~ final_position, data = .)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Wilcoxon rank sum test with continuity correction
## 
## data:  strength_of_schedule by final_position
## W = 54732, p-value = 2.549e-07
## alternative hypothesis: true location shift is not equal to 0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;standings %&amp;gt;%
  filter(final_position != &amp;quot;No Playoffs&amp;quot;) %&amp;gt;%
  wilcox.test(strength_of_schedule ~ final_position, data = .)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Wilcoxon rank sum test with continuity correction
## 
## data:  strength_of_schedule by final_position
## W = 1599, p-value = 0.04333
## alternative hypothesis: true location shift is not equal to 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;plot&#34;&gt;Plot&lt;/h2&gt;
&lt;p&gt;Manually specify some colors (taken from the fun &lt;code&gt;wesanderson&lt;/code&gt; package)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;final_position_pal = c(
  &amp;quot;No Playoffs&amp;quot; = &amp;quot;#F2AD00&amp;quot;, 
  &amp;quot;Playoffs&amp;quot; = &amp;quot;#00A08A&amp;quot;, 
  &amp;quot;Won Superbowl&amp;quot;  = &amp;quot;#FF0000&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will use the features of the great new &lt;code&gt;ggtext&lt;/code&gt; package to color text in the subtitle of the plot, obviating the need for a figure legend.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggtext)

standings %&amp;gt;%
  ggplot(aes(x = final_position, y = strength_of_schedule, fill = final_position)) + 
  geom_hline(yintercept = 0, lwd = 0.5, lty = 2, color = &#39;grey 50&#39;) + 
  geom_boxplot() +
  #geom_jitter(width = 0.25) + 
  geom_text(data = standing_summary, 
            inherit.aes = FALSE, 
            nudge_y = 0.22, 
            mapping = aes(x = final_position, y = median_strength, label = median_strength)) + 
  scale_fill_manual(values = final_position_pal,
                      guide = &#39;none&#39;
                      ) + 
  theme_minimal() + 
  theme(axis.title = element_blank(), 
        axis.text.x = element_blank(), 
        panel.grid.minor = element_blank(), 
        panel.grid.major.x = element_blank(),
        plot.title = element_textbox(), 
        plot.subtitle = element_markdown(linewidth = 20)
        ) +
  labs(title = &amp;quot;**No Easy Road to Super Bowl Victory**&amp;quot;, 
       subtitle = &amp;quot;Since 2000, NFL &amp;lt;b style=&#39;color:#F2AD00&#39;&amp;gt;teams that miss the playoffs&amp;lt;/b&amp;gt; have a harder schedule (an average opponent  
rating greater than the dashed line at zero) than &amp;lt;b style=&#39;color:#00A08A&#39;&amp;gt;teams that make it to the playoffs&amp;lt;/b&amp;gt;.  
A &amp;lt;b style=&#39;color:#FF0000&#39;&amp;gt;Super Bowl winner&#39;s&amp;lt;/b&amp;gt;  schedule is much tougher by comparison.&amp;quot;
) + 
  ggsave(filename = &#39;featured.png&#39;, width = 7, height = 7)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-04-tt-football_files/figure-markdown_github/unnamed-chunk-6-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;bonus-color-by-team-name&#34;&gt;Bonus: Color by Team Name&lt;/h2&gt;
&lt;p&gt;How does it look to plot individual points for each team, coloring them accoring to their team colors (thanks to the &lt;code&gt;teamcolors&lt;/code&gt; package)?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;team_fill = teamcolors::league_pal(&#39;nfl&#39;, which = 2)
team_color = teamcolors::league_pal(&#39;nfl&#39;, which = 1)

## Use just team name, not the home city (which changes for a couple teams)
names(team_fill)  &amp;lt;- str_remove(names(team_fill), &amp;quot;^.* &amp;quot;)
names(team_color)  &amp;lt;- str_remove(names(team_color), &amp;quot;^.* &amp;quot;)

standings %&amp;gt;%
  ggplot(aes(x = final_position, y = strength_of_schedule, fill = team_name, color = team_name)) + 
  geom_jitter(width = 0.4, pch = 23, size  = 3) + 
  scale_fill_manual(values = team_fill, 
                    guide = &#39;none&#39;
                    ) + 
  scale_color_manual(values = team_color,
                     guide = &#39;none&#39;
                    )   + 
  theme_minimal() + 
  theme(axis.title = element_blank(), 
        panel.grid.minor = element_blank(), 
        panel.grid.major.x = element_blank(),
        plot.title = element_textbox(), 
        plot.subtitle = element_markdown(linewidth = 20)
        ) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-04-tt-football_files/figure-markdown_github/unnamed-chunk-7-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ugly. Too many of the teams have colors that are close to one another.&lt;/p&gt;
&lt;h2 id=&#34;bonus-what-is-the-bump-in-attendance-the-year-after-winning-a-superbowl&#34;&gt;Bonus: What is the bump in attendance the year after winning a superbowl?&lt;/h2&gt;
&lt;p&gt;Making use of the &lt;code&gt;lag()&lt;/code&gt; function, if you account for the fact that each team has a different &amp;ldquo;baseline&amp;rdquo; of attendance, it looks like the year after a superbowl win, attendence to away games may go up a bit. Home games and total attendance doesn&amp;rsquo;t really change though.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;attendance %&amp;gt;%
  select(team, team_name, year, total, home, away) %&amp;gt;%
  distinct() %&amp;gt;%
  group_by(team) %&amp;gt;%
  ## adjust attendance on a per-team basis to account for a difference baseline for each team
  mutate_at(vars(total, home, away), .funs = ~scale(., scale = FALSE) ) %&amp;gt;%
  ungroup() %&amp;gt;%
  full_join(standings) %&amp;gt;%
  group_by(team) %&amp;gt;%
  mutate_all(.funs = list(last_year = ~lag(.))) %&amp;gt;%
  filter(sb_winner_last_year == &amp;quot;Won Superbowl&amp;quot;) %&amp;gt;%
  filter(!is.na(sb_winner_last_year)) %&amp;gt;%
  ungroup() %&amp;gt;%
  arrange(team, year) %&amp;gt;%
  gather(attendance_the_year_after_winning_superbowl, value, total, total_last_year, home, home_last_year, away, away_last_year) %&amp;gt;%
  ggplot(aes(x = attendance_the_year_after_winning_superbowl, y = value)) + 
  geom_boxplot() + 
  ggpubr::stat_compare_means() + 
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = c(&amp;quot;team&amp;quot;, &amp;quot;team_name&amp;quot;, &amp;quot;year&amp;quot;)

## `mutate_all()` ignored the following grouping variables:
## Column `team`
## Use `mutate_at(df, vars(-group_cols()), myoperation)` to silence the message.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-02-04-tt-football_files/figure-markdown_github/unnamed-chunk-8-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
